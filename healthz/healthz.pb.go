// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: github.com/openconfig/gnoi/healthz/healthz.proto

package healthz

import (
	types "github.com/openconfig/gnoi/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_UNSPECIFIED Status = 0
	Status_STATUS_HEALTHY     Status = 1
	Status_STATUS_UNHEALTHY   Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_HEALTHY",
		2: "STATUS_UNHEALTHY",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_HEALTHY":     1,
		"STATUS_UNHEALTHY":   2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnoi_healthz_healthz_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{0}
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *types.Path            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetPath() *types.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Component     *ComponentStatus       `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponse) GetComponent() *ComponentStatus {
	if x != nil {
		return x.Component
	}
	return nil
}

type ArtifactHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to ArtifactType:
	//
	//	*ArtifactHeader_File
	//	*ArtifactHeader_Proto
	//	*ArtifactHeader_Custom
	ArtifactType  isArtifactHeader_ArtifactType `protobuf_oneof:"artifact_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtifactHeader) Reset() {
	*x = ArtifactHeader{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtifactHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactHeader) ProtoMessage() {}

func (x *ArtifactHeader) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactHeader.ProtoReflect.Descriptor instead.
func (*ArtifactHeader) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{2}
}

func (x *ArtifactHeader) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArtifactHeader) GetArtifactType() isArtifactHeader_ArtifactType {
	if x != nil {
		return x.ArtifactType
	}
	return nil
}

func (x *ArtifactHeader) GetFile() *FileArtifactType {
	if x != nil {
		if x, ok := x.ArtifactType.(*ArtifactHeader_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *ArtifactHeader) GetProto() *ProtoArtifactType {
	if x != nil {
		if x, ok := x.ArtifactType.(*ArtifactHeader_Proto); ok {
			return x.Proto
		}
	}
	return nil
}

func (x *ArtifactHeader) GetCustom() *anypb.Any {
	if x != nil {
		if x, ok := x.ArtifactType.(*ArtifactHeader_Custom); ok {
			return x.Custom
		}
	}
	return nil
}

type isArtifactHeader_ArtifactType interface {
	isArtifactHeader_ArtifactType()
}

type ArtifactHeader_File struct {
	File *FileArtifactType `protobuf:"bytes,101,opt,name=file,proto3,oneof"`
}

type ArtifactHeader_Proto struct {
	Proto *ProtoArtifactType `protobuf:"bytes,102,opt,name=proto,proto3,oneof"`
}

type ArtifactHeader_Custom struct {
	Custom *anypb.Any `protobuf:"bytes,103,opt,name=custom,proto3,oneof"`
}

func (*ArtifactHeader_File) isArtifactHeader_ArtifactType() {}

func (*ArtifactHeader_Proto) isArtifactHeader_ArtifactType() {}

func (*ArtifactHeader_Custom) isArtifactHeader_ArtifactType() {}

type ComponentStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *types.Path            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Subcomponents []*ComponentStatus     `protobuf:"bytes,2,rep,name=subcomponents,proto3" json:"subcomponents,omitempty"`
	Status        Status                 `protobuf:"varint,3,opt,name=status,proto3,enum=gnoi.healthz.Status" json:"status,omitempty"`
	// Deprecated: Marked as deprecated in github.com/openconfig/gnoi/healthz/healthz.proto.
	Healthz       *anypb.Any             `protobuf:"bytes,4,opt,name=healthz,proto3" json:"healthz,omitempty"`
	Artifacts     []*ArtifactHeader      `protobuf:"bytes,5,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Id            string                 `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	Acknowledged  bool                   `protobuf:"varint,7,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created,proto3" json:"created,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentStatus) Reset() {
	*x = ComponentStatus{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentStatus) ProtoMessage() {}

func (x *ComponentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentStatus.ProtoReflect.Descriptor instead.
func (*ComponentStatus) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{3}
}

func (x *ComponentStatus) GetPath() *types.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *ComponentStatus) GetSubcomponents() []*ComponentStatus {
	if x != nil {
		return x.Subcomponents
	}
	return nil
}

func (x *ComponentStatus) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

// Deprecated: Marked as deprecated in github.com/openconfig/gnoi/healthz/healthz.proto.
func (x *ComponentStatus) GetHealthz() *anypb.Any {
	if x != nil {
		return x.Healthz
	}
	return nil
}

func (x *ComponentStatus) GetArtifacts() []*ArtifactHeader {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *ComponentStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComponentStatus) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *ComponentStatus) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ComponentStatus) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type ListRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Path                *types.Path            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	IncludeAcknowledged bool                   `protobuf:"varint,2,opt,name=include_acknowledged,json=includeAcknowledged,proto3" json:"include_acknowledged,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{4}
}

func (x *ListRequest) GetPath() *types.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *ListRequest) GetIncludeAcknowledged() bool {
	if x != nil {
		return x.IncludeAcknowledged
	}
	return false
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Statuses      []*ComponentStatus     `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{5}
}

func (x *ListResponse) GetStatuses() []*ComponentStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type AcknowledgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *types.Path            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcknowledgeRequest) Reset() {
	*x = AcknowledgeRequest{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeRequest) ProtoMessage() {}

func (x *AcknowledgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeRequest.ProtoReflect.Descriptor instead.
func (*AcknowledgeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{6}
}

func (x *AcknowledgeRequest) GetPath() *types.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *AcknowledgeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AcknowledgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ComponentStatus       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcknowledgeResponse) Reset() {
	*x = AcknowledgeResponse{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeResponse) ProtoMessage() {}

func (x *AcknowledgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeResponse.ProtoReflect.Descriptor instead.
func (*AcknowledgeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{7}
}

func (x *AcknowledgeResponse) GetStatus() *ComponentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ArtifactRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtifactRequest) Reset() {
	*x = ArtifactRequest{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactRequest) ProtoMessage() {}

func (x *ArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactRequest.ProtoReflect.Descriptor instead.
func (*ArtifactRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{8}
}

func (x *ArtifactRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ArtifactResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Contents:
	//
	//	*ArtifactResponse_Header
	//	*ArtifactResponse_Trailer
	//	*ArtifactResponse_Bytes
	//	*ArtifactResponse_Proto
	Contents      isArtifactResponse_Contents `protobuf_oneof:"contents"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtifactResponse) Reset() {
	*x = ArtifactResponse{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactResponse) ProtoMessage() {}

func (x *ArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactResponse.ProtoReflect.Descriptor instead.
func (*ArtifactResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{9}
}

func (x *ArtifactResponse) GetContents() isArtifactResponse_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *ArtifactResponse) GetHeader() *ArtifactHeader {
	if x != nil {
		if x, ok := x.Contents.(*ArtifactResponse_Header); ok {
			return x.Header
		}
	}
	return nil
}

func (x *ArtifactResponse) GetTrailer() *ArtifactTrailer {
	if x != nil {
		if x, ok := x.Contents.(*ArtifactResponse_Trailer); ok {
			return x.Trailer
		}
	}
	return nil
}

func (x *ArtifactResponse) GetBytes() []byte {
	if x != nil {
		if x, ok := x.Contents.(*ArtifactResponse_Bytes); ok {
			return x.Bytes
		}
	}
	return nil
}

func (x *ArtifactResponse) GetProto() *anypb.Any {
	if x != nil {
		if x, ok := x.Contents.(*ArtifactResponse_Proto); ok {
			return x.Proto
		}
	}
	return nil
}

type isArtifactResponse_Contents interface {
	isArtifactResponse_Contents()
}

type ArtifactResponse_Header struct {
	Header *ArtifactHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type ArtifactResponse_Trailer struct {
	Trailer *ArtifactTrailer `protobuf:"bytes,2,opt,name=trailer,proto3,oneof"`
}

type ArtifactResponse_Bytes struct {
	Bytes []byte `protobuf:"bytes,3,opt,name=bytes,proto3,oneof"`
}

type ArtifactResponse_Proto struct {
	Proto *anypb.Any `protobuf:"bytes,4,opt,name=proto,proto3,oneof"`
}

func (*ArtifactResponse_Header) isArtifactResponse_Contents() {}

func (*ArtifactResponse_Trailer) isArtifactResponse_Contents() {}

func (*ArtifactResponse_Bytes) isArtifactResponse_Contents() {}

func (*ArtifactResponse_Proto) isArtifactResponse_Contents() {}

type FileArtifactType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Mimetype      string                 `protobuf:"bytes,3,opt,name=mimetype,proto3" json:"mimetype,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Hash          *types.HashType        `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileArtifactType) Reset() {
	*x = FileArtifactType{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileArtifactType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileArtifactType) ProtoMessage() {}

func (x *FileArtifactType) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileArtifactType.ProtoReflect.Descriptor instead.
func (*FileArtifactType) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{10}
}

func (x *FileArtifactType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileArtifactType) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileArtifactType) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

func (x *FileArtifactType) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileArtifactType) GetHash() *types.HashType {
	if x != nil {
		return x.Hash
	}
	return nil
}

type ProtoArtifactType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoArtifactType) Reset() {
	*x = ProtoArtifactType{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoArtifactType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoArtifactType) ProtoMessage() {}

func (x *ProtoArtifactType) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoArtifactType.ProtoReflect.Descriptor instead.
func (*ProtoArtifactType) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{11}
}

type ArtifactTrailer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtifactTrailer) Reset() {
	*x = ArtifactTrailer{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtifactTrailer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactTrailer) ProtoMessage() {}

func (x *ArtifactTrailer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactTrailer.ProtoReflect.Descriptor instead.
func (*ArtifactTrailer) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{12}
}

type CheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *types.Path            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	EventId       string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{13}
}

func (x *CheckRequest) GetPath() *types.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *CheckRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type CheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ComponentStatus       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP(), []int{14}
}

func (x *CheckResponse) GetStatus() *ComponentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_github_com_openconfig_gnoi_healthz_healthz_proto protoreflect.FileDescriptor

const file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDesc = "" +
	"\n" +
	"0github.com/openconfig/gnoi/healthz/healthz.proto\x12\fgnoi.healthz\x1a,github.com/openconfig/gnoi/types/types.proto\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"2\n" +
	"\n" +
	"GetRequest\x12$\n" +
	"\x04path\x18\x01 \x01(\v2\x10.gnoi.types.PathR\x04path\"J\n" +
	"\vGetResponse\x12;\n" +
	"\tcomponent\x18\x01 \x01(\v2\x1d.gnoi.healthz.ComponentStatusR\tcomponent\"\xd0\x01\n" +
	"\x0eArtifactHeader\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x124\n" +
	"\x04file\x18e \x01(\v2\x1e.gnoi.healthz.FileArtifactTypeH\x00R\x04file\x127\n" +
	"\x05proto\x18f \x01(\v2\x1f.gnoi.healthz.ProtoArtifactTypeH\x00R\x05proto\x12.\n" +
	"\x06custom\x18g \x01(\v2\x14.google.protobuf.AnyH\x00R\x06customB\x0f\n" +
	"\rartifact_type\"\xba\x03\n" +
	"\x0fComponentStatus\x12$\n" +
	"\x04path\x18\x01 \x01(\v2\x10.gnoi.types.PathR\x04path\x12C\n" +
	"\rsubcomponents\x18\x02 \x03(\v2\x1d.gnoi.healthz.ComponentStatusR\rsubcomponents\x12,\n" +
	"\x06status\x18\x03 \x01(\x0e2\x14.gnoi.healthz.StatusR\x06status\x122\n" +
	"\ahealthz\x18\x04 \x01(\v2\x14.google.protobuf.AnyB\x02\x18\x01R\ahealthz\x12:\n" +
	"\tartifacts\x18\x05 \x03(\v2\x1c.gnoi.healthz.ArtifactHeaderR\tartifacts\x12\x0e\n" +
	"\x02id\x18\x06 \x01(\tR\x02id\x12\"\n" +
	"\facknowledged\x18\a \x01(\bR\facknowledged\x124\n" +
	"\acreated\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aexpires\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"f\n" +
	"\vListRequest\x12$\n" +
	"\x04path\x18\x01 \x01(\v2\x10.gnoi.types.PathR\x04path\x121\n" +
	"\x14include_acknowledged\x18\x02 \x01(\bR\x13includeAcknowledged\"I\n" +
	"\fListResponse\x129\n" +
	"\bstatuses\x18\x01 \x03(\v2\x1d.gnoi.healthz.ComponentStatusR\bstatuses\"J\n" +
	"\x12AcknowledgeRequest\x12$\n" +
	"\x04path\x18\x01 \x01(\v2\x10.gnoi.types.PathR\x04path\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"L\n" +
	"\x13AcknowledgeResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.gnoi.healthz.ComponentStatusR\x06status\"!\n" +
	"\x0fArtifactRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xd7\x01\n" +
	"\x10ArtifactResponse\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1c.gnoi.healthz.ArtifactHeaderH\x00R\x06header\x129\n" +
	"\atrailer\x18\x02 \x01(\v2\x1d.gnoi.healthz.ArtifactTrailerH\x00R\atrailer\x12\x16\n" +
	"\x05bytes\x18\x03 \x01(\fH\x00R\x05bytes\x12,\n" +
	"\x05proto\x18\x04 \x01(\v2\x14.google.protobuf.AnyH\x00R\x05protoB\n" +
	"\n" +
	"\bcontents\"\x94\x01\n" +
	"\x10FileArtifactType\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x1a\n" +
	"\bmimetype\x18\x03 \x01(\tR\bmimetype\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12(\n" +
	"\x04hash\x18\x05 \x01(\v2\x14.gnoi.types.HashTypeR\x04hash\"\x13\n" +
	"\x11ProtoArtifactType\"\x11\n" +
	"\x0fArtifactTrailer\"O\n" +
	"\fCheckRequest\x12$\n" +
	"\x04path\x18\x01 \x01(\v2\x10.gnoi.types.PathR\x04path\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\"F\n" +
	"\rCheckResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.gnoi.healthz.ComponentStatusR\x06status*J\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSTATUS_HEALTHY\x10\x01\x12\x14\n" +
	"\x10STATUS_UNHEALTHY\x10\x022\xf1\x02\n" +
	"\aHealthz\x12<\n" +
	"\x03Get\x12\x18.gnoi.healthz.GetRequest\x1a\x19.gnoi.healthz.GetResponse\"\x00\x12?\n" +
	"\x04List\x12\x19.gnoi.healthz.ListRequest\x1a\x1a.gnoi.healthz.ListResponse\"\x00\x12T\n" +
	"\vAcknowledge\x12 .gnoi.healthz.AcknowledgeRequest\x1a!.gnoi.healthz.AcknowledgeResponse\"\x00\x12M\n" +
	"\bArtifact\x12\x1d.gnoi.healthz.ArtifactRequest\x1a\x1e.gnoi.healthz.ArtifactResponse\"\x000\x01\x12B\n" +
	"\x05Check\x12\x1a.gnoi.healthz.CheckRequest\x1a\x1b.gnoi.healthz.CheckResponse\"\x00B,\xd2>\x051.3.0Z\"github.com/openconfig/gnoi/healthzb\x06proto3"

var (
	file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescOnce sync.Once
	file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescData []byte
)

func file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDesc), len(file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDesc)))
	})
	return file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDescData
}

var file_github_com_openconfig_gnoi_healthz_healthz_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_github_com_openconfig_gnoi_healthz_healthz_proto_goTypes = []any{
	(Status)(0),                   // 0: gnoi.healthz.Status
	(*GetRequest)(nil),            // 1: gnoi.healthz.GetRequest
	(*GetResponse)(nil),           // 2: gnoi.healthz.GetResponse
	(*ArtifactHeader)(nil),        // 3: gnoi.healthz.ArtifactHeader
	(*ComponentStatus)(nil),       // 4: gnoi.healthz.ComponentStatus
	(*ListRequest)(nil),           // 5: gnoi.healthz.ListRequest
	(*ListResponse)(nil),          // 6: gnoi.healthz.ListResponse
	(*AcknowledgeRequest)(nil),    // 7: gnoi.healthz.AcknowledgeRequest
	(*AcknowledgeResponse)(nil),   // 8: gnoi.healthz.AcknowledgeResponse
	(*ArtifactRequest)(nil),       // 9: gnoi.healthz.ArtifactRequest
	(*ArtifactResponse)(nil),      // 10: gnoi.healthz.ArtifactResponse
	(*FileArtifactType)(nil),      // 11: gnoi.healthz.FileArtifactType
	(*ProtoArtifactType)(nil),     // 12: gnoi.healthz.ProtoArtifactType
	(*ArtifactTrailer)(nil),       // 13: gnoi.healthz.ArtifactTrailer
	(*CheckRequest)(nil),          // 14: gnoi.healthz.CheckRequest
	(*CheckResponse)(nil),         // 15: gnoi.healthz.CheckResponse
	(*types.Path)(nil),            // 16: gnoi.types.Path
	(*anypb.Any)(nil),             // 17: google.protobuf.Any
	(*timestamppb.Timestamp)(nil), // 18: google.protobuf.Timestamp
	(*types.HashType)(nil),        // 19: gnoi.types.HashType
}
var file_github_com_openconfig_gnoi_healthz_healthz_proto_depIdxs = []int32{
	16, // 0: gnoi.healthz.GetRequest.path:type_name -> gnoi.types.Path
	4,  // 1: gnoi.healthz.GetResponse.component:type_name -> gnoi.healthz.ComponentStatus
	11, // 2: gnoi.healthz.ArtifactHeader.file:type_name -> gnoi.healthz.FileArtifactType
	12, // 3: gnoi.healthz.ArtifactHeader.proto:type_name -> gnoi.healthz.ProtoArtifactType
	17, // 4: gnoi.healthz.ArtifactHeader.custom:type_name -> google.protobuf.Any
	16, // 5: gnoi.healthz.ComponentStatus.path:type_name -> gnoi.types.Path
	4,  // 6: gnoi.healthz.ComponentStatus.subcomponents:type_name -> gnoi.healthz.ComponentStatus
	0,  // 7: gnoi.healthz.ComponentStatus.status:type_name -> gnoi.healthz.Status
	17, // 8: gnoi.healthz.ComponentStatus.healthz:type_name -> google.protobuf.Any
	3,  // 9: gnoi.healthz.ComponentStatus.artifacts:type_name -> gnoi.healthz.ArtifactHeader
	18, // 10: gnoi.healthz.ComponentStatus.created:type_name -> google.protobuf.Timestamp
	18, // 11: gnoi.healthz.ComponentStatus.expires:type_name -> google.protobuf.Timestamp
	16, // 12: gnoi.healthz.ListRequest.path:type_name -> gnoi.types.Path
	4,  // 13: gnoi.healthz.ListResponse.statuses:type_name -> gnoi.healthz.ComponentStatus
	16, // 14: gnoi.healthz.AcknowledgeRequest.path:type_name -> gnoi.types.Path
	4,  // 15: gnoi.healthz.AcknowledgeResponse.status:type_name -> gnoi.healthz.ComponentStatus
	3,  // 16: gnoi.healthz.ArtifactResponse.header:type_name -> gnoi.healthz.ArtifactHeader
	13, // 17: gnoi.healthz.ArtifactResponse.trailer:type_name -> gnoi.healthz.ArtifactTrailer
	17, // 18: gnoi.healthz.ArtifactResponse.proto:type_name -> google.protobuf.Any
	19, // 19: gnoi.healthz.FileArtifactType.hash:type_name -> gnoi.types.HashType
	16, // 20: gnoi.healthz.CheckRequest.path:type_name -> gnoi.types.Path
	4,  // 21: gnoi.healthz.CheckResponse.status:type_name -> gnoi.healthz.ComponentStatus
	1,  // 22: gnoi.healthz.Healthz.Get:input_type -> gnoi.healthz.GetRequest
	5,  // 23: gnoi.healthz.Healthz.List:input_type -> gnoi.healthz.ListRequest
	7,  // 24: gnoi.healthz.Healthz.Acknowledge:input_type -> gnoi.healthz.AcknowledgeRequest
	9,  // 25: gnoi.healthz.Healthz.Artifact:input_type -> gnoi.healthz.ArtifactRequest
	14, // 26: gnoi.healthz.Healthz.Check:input_type -> gnoi.healthz.CheckRequest
	2,  // 27: gnoi.healthz.Healthz.Get:output_type -> gnoi.healthz.GetResponse
	6,  // 28: gnoi.healthz.Healthz.List:output_type -> gnoi.healthz.ListResponse
	8,  // 29: gnoi.healthz.Healthz.Acknowledge:output_type -> gnoi.healthz.AcknowledgeResponse
	10, // 30: gnoi.healthz.Healthz.Artifact:output_type -> gnoi.healthz.ArtifactResponse
	15, // 31: gnoi.healthz.Healthz.Check:output_type -> gnoi.healthz.CheckResponse
	27, // [27:32] is the sub-list for method output_type
	22, // [22:27] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_gnoi_healthz_healthz_proto_init() }
func file_github_com_openconfig_gnoi_healthz_healthz_proto_init() {
	if File_github_com_openconfig_gnoi_healthz_healthz_proto != nil {
		return
	}
	file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[2].OneofWrappers = []any{
		(*ArtifactHeader_File)(nil),
		(*ArtifactHeader_Proto)(nil),
		(*ArtifactHeader_Custom)(nil),
	}
	file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes[9].OneofWrappers = []any{
		(*ArtifactResponse_Header)(nil),
		(*ArtifactResponse_Trailer)(nil),
		(*ArtifactResponse_Bytes)(nil),
		(*ArtifactResponse_Proto)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDesc), len(file_github_com_openconfig_gnoi_healthz_healthz_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_openconfig_gnoi_healthz_healthz_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_gnoi_healthz_healthz_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_gnoi_healthz_healthz_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_gnoi_healthz_healthz_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_gnoi_healthz_healthz_proto = out.File
	file_github_com_openconfig_gnoi_healthz_healthz_proto_goTypes = nil
	file_github_com_openconfig_gnoi_healthz_healthz_proto_depIdxs = nil
}
