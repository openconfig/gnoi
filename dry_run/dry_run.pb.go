// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: dry_run/dry_run.proto

package dry_run

import (
	gnmi "github.com/openconfig/gnmi/proto/gnmi"
	_ "github.com/openconfig/gnoi/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	In *gnmi.SetRequest `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
}

func (x *CompareRequest) Reset() {
	*x = CompareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dry_run_dry_run_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareRequest) ProtoMessage() {}

func (x *CompareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dry_run_dry_run_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareRequest.ProtoReflect.Descriptor instead.
func (*CompareRequest) Descriptor() ([]byte, []int) {
	return file_dry_run_dry_run_proto_rawDescGZIP(), []int{0}
}

func (x *CompareRequest) GetIn() *gnmi.SetRequest {
	if x != nil {
		return x.In
	}
	return nil
}

type CompareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diffs []*Diff `protobuf:"bytes,1,rep,name=diffs,proto3" json:"diffs,omitempty"`
}

func (x *CompareResponse) Reset() {
	*x = CompareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dry_run_dry_run_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareResponse) ProtoMessage() {}

func (x *CompareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dry_run_dry_run_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareResponse.ProtoReflect.Descriptor instead.
func (*CompareResponse) Descriptor() ([]byte, []int) {
	return file_dry_run_dry_run_proto_rawDescGZIP(), []int{1}
}

func (x *CompareResponse) GetDiffs() []*Diff {
	if x != nil {
		return x.Diffs
	}
	return nil
}

type Diff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Path:
	//
	//	*Diff_Added
	//	*Diff_Removed
	//	*Diff_Modified
	//	*Diff_Diff
	Path isDiff_Path `protobuf_oneof:"path"`
	Msg  string      `protobuf:"bytes,100,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Diff) Reset() {
	*x = Diff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dry_run_dry_run_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diff) ProtoMessage() {}

func (x *Diff) ProtoReflect() protoreflect.Message {
	mi := &file_dry_run_dry_run_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diff.ProtoReflect.Descriptor instead.
func (*Diff) Descriptor() ([]byte, []int) {
	return file_dry_run_dry_run_proto_rawDescGZIP(), []int{2}
}

func (m *Diff) GetPath() isDiff_Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (x *Diff) GetAdded() *gnmi.Path {
	if x, ok := x.GetPath().(*Diff_Added); ok {
		return x.Added
	}
	return nil
}

func (x *Diff) GetRemoved() *gnmi.Path {
	if x, ok := x.GetPath().(*Diff_Removed); ok {
		return x.Removed
	}
	return nil
}

func (x *Diff) GetModified() *gnmi.Path {
	if x, ok := x.GetPath().(*Diff_Modified); ok {
		return x.Modified
	}
	return nil
}

func (x *Diff) GetDiff() []byte {
	if x, ok := x.GetPath().(*Diff_Diff); ok {
		return x.Diff
	}
	return nil
}

func (x *Diff) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type isDiff_Path interface {
	isDiff_Path()
}

type Diff_Added struct {
	Added *gnmi.Path `protobuf:"bytes,1,opt,name=added,proto3,oneof"`
}

type Diff_Removed struct {
	Removed *gnmi.Path `protobuf:"bytes,2,opt,name=removed,proto3,oneof"`
}

type Diff_Modified struct {
	Modified *gnmi.Path `protobuf:"bytes,3,opt,name=modified,proto3,oneof"`
}

type Diff_Diff struct {
	Diff []byte `protobuf:"bytes,4,opt,name=diff,proto3,oneof"`
}

func (*Diff_Added) isDiff_Path() {}

func (*Diff_Removed) isDiff_Path() {}

func (*Diff_Modified) isDiff_Path() {}

func (*Diff_Diff) isDiff_Path() {}

var File_dry_run_dry_run_proto protoreflect.FileDescriptor

var file_dry_run_dry_run_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x2f, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x72,
	0x79, 0x5f, 0x72, 0x75, 0x6e, 0x1a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x6d,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6e, 0x6d, 0x69, 0x2f, 0x67, 0x6e, 0x6d,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67,
	0x6e, 0x6f, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6d, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x02, 0x69, 0x6e, 0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6e,
	0x6f, 0x69, 0x2e, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x52,
	0x05, 0x64, 0x69, 0x66, 0x66, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x04, 0x44, 0x69, 0x66, 0x66, 0x12,
	0x22, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x67, 0x6e, 0x6d, 0x69, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x05, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x6e, 0x6d, 0x69, 0x2e, 0x50, 0x61, 0x74, 0x68,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x67, 0x6e, 0x6d, 0x69, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x42, 0x06, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x32, 0x54, 0x0a, 0x06, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12,
	0x4a, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6e, 0x6f,
	0x69, 0x2e, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e,
	0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x2c, 0xd2, 0x3e, 0x05,
	0x30, 0x2e, 0x31, 0x2e, 0x30, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x6f,
	0x69, 0x2f, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_dry_run_dry_run_proto_rawDescOnce sync.Once
	file_dry_run_dry_run_proto_rawDescData = file_dry_run_dry_run_proto_rawDesc
)

func file_dry_run_dry_run_proto_rawDescGZIP() []byte {
	file_dry_run_dry_run_proto_rawDescOnce.Do(func() {
		file_dry_run_dry_run_proto_rawDescData = protoimpl.X.CompressGZIP(file_dry_run_dry_run_proto_rawDescData)
	})
	return file_dry_run_dry_run_proto_rawDescData
}

var file_dry_run_dry_run_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_dry_run_dry_run_proto_goTypes = []interface{}{
	(*CompareRequest)(nil),  // 0: gnoi.dry_run.CompareRequest
	(*CompareResponse)(nil), // 1: gnoi.dry_run.CompareResponse
	(*Diff)(nil),            // 2: gnoi.dry_run.Diff
	(*gnmi.SetRequest)(nil), // 3: gnmi.SetRequest
	(*gnmi.Path)(nil),       // 4: gnmi.Path
}
var file_dry_run_dry_run_proto_depIdxs = []int32{
	3, // 0: gnoi.dry_run.CompareRequest.in:type_name -> gnmi.SetRequest
	2, // 1: gnoi.dry_run.CompareResponse.diffs:type_name -> gnoi.dry_run.Diff
	4, // 2: gnoi.dry_run.Diff.added:type_name -> gnmi.Path
	4, // 3: gnoi.dry_run.Diff.removed:type_name -> gnmi.Path
	4, // 4: gnoi.dry_run.Diff.modified:type_name -> gnmi.Path
	0, // 5: gnoi.dry_run.DryRun.Compare:input_type -> gnoi.dry_run.CompareRequest
	1, // 6: gnoi.dry_run.DryRun.Compare:output_type -> gnoi.dry_run.CompareResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_dry_run_dry_run_proto_init() }
func file_dry_run_dry_run_proto_init() {
	if File_dry_run_dry_run_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dry_run_dry_run_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dry_run_dry_run_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dry_run_dry_run_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dry_run_dry_run_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Diff_Added)(nil),
		(*Diff_Removed)(nil),
		(*Diff_Modified)(nil),
		(*Diff_Diff)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dry_run_dry_run_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dry_run_dry_run_proto_goTypes,
		DependencyIndexes: file_dry_run_dry_run_proto_depIdxs,
		MessageInfos:      file_dry_run_dry_run_proto_msgTypes,
	}.Build()
	File_dry_run_dry_run_proto = out.File
	file_dry_run_dry_run_proto_rawDesc = nil
	file_dry_run_dry_run_proto_goTypes = nil
	file_dry_run_dry_run_proto_depIdxs = nil
}
