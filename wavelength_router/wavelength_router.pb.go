// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: wavelength_router/wavelength_router.proto

package wavelength_router

import (
	types "github.com/openconfig/gnoi/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdjustPSDRequest_SignalDirection int32

const (
	AdjustPSDRequest_DIRECTION_UNKNOWN AdjustPSDRequest_SignalDirection = 0
	AdjustPSDRequest_DIRECTION_INPUT   AdjustPSDRequest_SignalDirection = 1
	AdjustPSDRequest_DIRECTION_OUTPUT  AdjustPSDRequest_SignalDirection = 2
)

// Enum value maps for AdjustPSDRequest_SignalDirection.
var (
	AdjustPSDRequest_SignalDirection_name = map[int32]string{
		0: "DIRECTION_UNKNOWN",
		1: "DIRECTION_INPUT",
		2: "DIRECTION_OUTPUT",
	}
	AdjustPSDRequest_SignalDirection_value = map[string]int32{
		"DIRECTION_UNKNOWN": 0,
		"DIRECTION_INPUT":   1,
		"DIRECTION_OUTPUT":  2,
	}
)

func (x AdjustPSDRequest_SignalDirection) Enum() *AdjustPSDRequest_SignalDirection {
	p := new(AdjustPSDRequest_SignalDirection)
	*p = x
	return p
}

func (x AdjustPSDRequest_SignalDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdjustPSDRequest_SignalDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_wavelength_router_wavelength_router_proto_enumTypes[0].Descriptor()
}

func (AdjustPSDRequest_SignalDirection) Type() protoreflect.EnumType {
	return &file_wavelength_router_wavelength_router_proto_enumTypes[0]
}

func (x AdjustPSDRequest_SignalDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdjustPSDRequest_SignalDirection.Descriptor instead.
func (AdjustPSDRequest_SignalDirection) EnumDescriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{0, 0}
}

type AdjustPSDProgress_State int32

const (
	AdjustPSDProgress_UNKNOWN  AdjustPSDProgress_State = 0
	AdjustPSDProgress_RUNNING  AdjustPSDProgress_State = 1
	AdjustPSDProgress_COMPLETE AdjustPSDProgress_State = 2
)

// Enum value maps for AdjustPSDProgress_State.
var (
	AdjustPSDProgress_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "RUNNING",
		2: "COMPLETE",
	}
	AdjustPSDProgress_State_value = map[string]int32{
		"UNKNOWN":  0,
		"RUNNING":  1,
		"COMPLETE": 2,
	}
)

func (x AdjustPSDProgress_State) Enum() *AdjustPSDProgress_State {
	p := new(AdjustPSDProgress_State)
	*p = x
	return p
}

func (x AdjustPSDProgress_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdjustPSDProgress_State) Descriptor() protoreflect.EnumDescriptor {
	return file_wavelength_router_wavelength_router_proto_enumTypes[1].Descriptor()
}

func (AdjustPSDProgress_State) Type() protoreflect.EnumType {
	return &file_wavelength_router_wavelength_router_proto_enumTypes[1]
}

func (x AdjustPSDProgress_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdjustPSDProgress_State.Descriptor instead.
func (AdjustPSDProgress_State) EnumDescriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{1, 0}
}

type AdjustPSDError_Type int32

const (
	AdjustPSDError_UNSPECIFIED      AdjustPSDError_Type = 0
	AdjustPSDError_PORT_BUSY        AdjustPSDError_Type = 1
	AdjustPSDError_HARDWARE_FAILURE AdjustPSDError_Type = 2
)

// Enum value maps for AdjustPSDError_Type.
var (
	AdjustPSDError_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "PORT_BUSY",
		2: "HARDWARE_FAILURE",
	}
	AdjustPSDError_Type_value = map[string]int32{
		"UNSPECIFIED":      0,
		"PORT_BUSY":        1,
		"HARDWARE_FAILURE": 2,
	}
)

func (x AdjustPSDError_Type) Enum() *AdjustPSDError_Type {
	p := new(AdjustPSDError_Type)
	*p = x
	return p
}

func (x AdjustPSDError_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdjustPSDError_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_wavelength_router_wavelength_router_proto_enumTypes[2].Descriptor()
}

func (AdjustPSDError_Type) Type() protoreflect.EnumType {
	return &file_wavelength_router_wavelength_router_proto_enumTypes[2]
}

func (x AdjustPSDError_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdjustPSDError_Type.Descriptor instead.
func (AdjustPSDError_Type) EnumDescriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{2, 0}
}

type AdjustSpectrumRequest_SignalDirection int32

const (
	AdjustSpectrumRequest_DIRECTION_UNKNOWN AdjustSpectrumRequest_SignalDirection = 0
	AdjustSpectrumRequest_DIRECTION_INPUT   AdjustSpectrumRequest_SignalDirection = 1
	AdjustSpectrumRequest_DIRECTION_OUTPUT  AdjustSpectrumRequest_SignalDirection = 2
)

// Enum value maps for AdjustSpectrumRequest_SignalDirection.
var (
	AdjustSpectrumRequest_SignalDirection_name = map[int32]string{
		0: "DIRECTION_UNKNOWN",
		1: "DIRECTION_INPUT",
		2: "DIRECTION_OUTPUT",
	}
	AdjustSpectrumRequest_SignalDirection_value = map[string]int32{
		"DIRECTION_UNKNOWN": 0,
		"DIRECTION_INPUT":   1,
		"DIRECTION_OUTPUT":  2,
	}
)

func (x AdjustSpectrumRequest_SignalDirection) Enum() *AdjustSpectrumRequest_SignalDirection {
	p := new(AdjustSpectrumRequest_SignalDirection)
	*p = x
	return p
}

func (x AdjustSpectrumRequest_SignalDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdjustSpectrumRequest_SignalDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_wavelength_router_wavelength_router_proto_enumTypes[3].Descriptor()
}

func (AdjustSpectrumRequest_SignalDirection) Type() protoreflect.EnumType {
	return &file_wavelength_router_wavelength_router_proto_enumTypes[3]
}

func (x AdjustSpectrumRequest_SignalDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdjustSpectrumRequest_SignalDirection.Descriptor instead.
func (AdjustSpectrumRequest_SignalDirection) EnumDescriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{5, 0}
}

type AdjustSpectrumProgress_State int32

const (
	AdjustSpectrumProgress_UNKNOWN  AdjustSpectrumProgress_State = 0
	AdjustSpectrumProgress_RUNNING  AdjustSpectrumProgress_State = 1
	AdjustSpectrumProgress_COMPLETE AdjustSpectrumProgress_State = 2
)

// Enum value maps for AdjustSpectrumProgress_State.
var (
	AdjustSpectrumProgress_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "RUNNING",
		2: "COMPLETE",
	}
	AdjustSpectrumProgress_State_value = map[string]int32{
		"UNKNOWN":  0,
		"RUNNING":  1,
		"COMPLETE": 2,
	}
)

func (x AdjustSpectrumProgress_State) Enum() *AdjustSpectrumProgress_State {
	p := new(AdjustSpectrumProgress_State)
	*p = x
	return p
}

func (x AdjustSpectrumProgress_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdjustSpectrumProgress_State) Descriptor() protoreflect.EnumDescriptor {
	return file_wavelength_router_wavelength_router_proto_enumTypes[4].Descriptor()
}

func (AdjustSpectrumProgress_State) Type() protoreflect.EnumType {
	return &file_wavelength_router_wavelength_router_proto_enumTypes[4]
}

func (x AdjustSpectrumProgress_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdjustSpectrumProgress_State.Descriptor instead.
func (AdjustSpectrumProgress_State) EnumDescriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{6, 0}
}

type AdjustSpectrumError_Type int32

const (
	AdjustSpectrumError_UNSPECIFIED      AdjustSpectrumError_Type = 0
	AdjustSpectrumError_PORT_BUSY        AdjustSpectrumError_Type = 1
	AdjustSpectrumError_HARDWARE_FAILURE AdjustSpectrumError_Type = 2
)

// Enum value maps for AdjustSpectrumError_Type.
var (
	AdjustSpectrumError_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "PORT_BUSY",
		2: "HARDWARE_FAILURE",
	}
	AdjustSpectrumError_Type_value = map[string]int32{
		"UNSPECIFIED":      0,
		"PORT_BUSY":        1,
		"HARDWARE_FAILURE": 2,
	}
)

func (x AdjustSpectrumError_Type) Enum() *AdjustSpectrumError_Type {
	p := new(AdjustSpectrumError_Type)
	*p = x
	return p
}

func (x AdjustSpectrumError_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdjustSpectrumError_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_wavelength_router_wavelength_router_proto_enumTypes[5].Descriptor()
}

func (AdjustSpectrumError_Type) Type() protoreflect.EnumType {
	return &file_wavelength_router_wavelength_router_proto_enumTypes[5]
}

func (x AdjustSpectrumError_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdjustSpectrumError_Type.Descriptor instead.
func (AdjustSpectrumError_Type) EnumDescriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{7, 0}
}

// Deprecated: Marked as deprecated in wavelength_router/wavelength_router.proto.
type AdjustPSDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *types.Path                      `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	Direction AdjustPSDRequest_SignalDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=gnoi.optical.AdjustPSDRequest_SignalDirection" json:"direction,omitempty"`
}

func (x *AdjustPSDRequest) Reset() {
	*x = AdjustPSDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustPSDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustPSDRequest) ProtoMessage() {}

func (x *AdjustPSDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustPSDRequest.ProtoReflect.Descriptor instead.
func (*AdjustPSDRequest) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{0}
}

func (x *AdjustPSDRequest) GetComponent() *types.Path {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *AdjustPSDRequest) GetDirection() AdjustPSDRequest_SignalDirection {
	if x != nil {
		return x.Direction
	}
	return AdjustPSDRequest_DIRECTION_UNKNOWN
}

// Deprecated: Marked as deprecated in wavelength_router/wavelength_router.proto.
type AdjustPSDProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State AdjustPSDProgress_State `protobuf:"varint,1,opt,name=state,proto3,enum=gnoi.optical.AdjustPSDProgress_State" json:"state,omitempty"`
}

func (x *AdjustPSDProgress) Reset() {
	*x = AdjustPSDProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustPSDProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustPSDProgress) ProtoMessage() {}

func (x *AdjustPSDProgress) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustPSDProgress.ProtoReflect.Descriptor instead.
func (*AdjustPSDProgress) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{1}
}

func (x *AdjustPSDProgress) GetState() AdjustPSDProgress_State {
	if x != nil {
		return x.State
	}
	return AdjustPSDProgress_UNKNOWN
}

// Deprecated: Marked as deprecated in wavelength_router/wavelength_router.proto.
type AdjustPSDError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   AdjustPSDError_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gnoi.optical.AdjustPSDError_Type" json:"type,omitempty"`
	Detail string              `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *AdjustPSDError) Reset() {
	*x = AdjustPSDError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustPSDError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustPSDError) ProtoMessage() {}

func (x *AdjustPSDError) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustPSDError.ProtoReflect.Descriptor instead.
func (*AdjustPSDError) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{2}
}

func (x *AdjustPSDError) GetType() AdjustPSDError_Type {
	if x != nil {
		return x.Type
	}
	return AdjustPSDError_UNSPECIFIED
}

func (x *AdjustPSDError) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

// Deprecated: Marked as deprecated in wavelength_router/wavelength_router.proto.
type AdjustPSDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*AdjustPSDResponse_Progress
	//	*AdjustPSDResponse_Error
	Response isAdjustPSDResponse_Response `protobuf_oneof:"response"`
}

func (x *AdjustPSDResponse) Reset() {
	*x = AdjustPSDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustPSDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustPSDResponse) ProtoMessage() {}

func (x *AdjustPSDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustPSDResponse.ProtoReflect.Descriptor instead.
func (*AdjustPSDResponse) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{3}
}

func (m *AdjustPSDResponse) GetResponse() isAdjustPSDResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AdjustPSDResponse) GetProgress() *AdjustPSDProgress {
	if x, ok := x.GetResponse().(*AdjustPSDResponse_Progress); ok {
		return x.Progress
	}
	return nil
}

func (x *AdjustPSDResponse) GetError() *AdjustPSDError {
	if x, ok := x.GetResponse().(*AdjustPSDResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isAdjustPSDResponse_Response interface {
	isAdjustPSDResponse_Response()
}

type AdjustPSDResponse_Progress struct {
	Progress *AdjustPSDProgress `protobuf:"bytes,1,opt,name=progress,proto3,oneof"`
}

type AdjustPSDResponse_Error struct {
	Error *AdjustPSDError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*AdjustPSDResponse_Progress) isAdjustPSDResponse_Response() {}

func (*AdjustPSDResponse_Error) isAdjustPSDResponse_Response() {}

// Deprecated: Marked as deprecated in wavelength_router/wavelength_router.proto.
type CancelAdjustPSDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelAdjustPSDResponse) Reset() {
	*x = CancelAdjustPSDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAdjustPSDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAdjustPSDResponse) ProtoMessage() {}

func (x *CancelAdjustPSDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAdjustPSDResponse.ProtoReflect.Descriptor instead.
func (*CancelAdjustPSDResponse) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{4}
}

type AdjustSpectrumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *types.Path                           `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	Direction AdjustSpectrumRequest_SignalDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=gnoi.optical.AdjustSpectrumRequest_SignalDirection" json:"direction,omitempty"`
}

func (x *AdjustSpectrumRequest) Reset() {
	*x = AdjustSpectrumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustSpectrumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustSpectrumRequest) ProtoMessage() {}

func (x *AdjustSpectrumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustSpectrumRequest.ProtoReflect.Descriptor instead.
func (*AdjustSpectrumRequest) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{5}
}

func (x *AdjustSpectrumRequest) GetComponent() *types.Path {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *AdjustSpectrumRequest) GetDirection() AdjustSpectrumRequest_SignalDirection {
	if x != nil {
		return x.Direction
	}
	return AdjustSpectrumRequest_DIRECTION_UNKNOWN
}

type AdjustSpectrumProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State AdjustSpectrumProgress_State `protobuf:"varint,1,opt,name=state,proto3,enum=gnoi.optical.AdjustSpectrumProgress_State" json:"state,omitempty"`
}

func (x *AdjustSpectrumProgress) Reset() {
	*x = AdjustSpectrumProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustSpectrumProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustSpectrumProgress) ProtoMessage() {}

func (x *AdjustSpectrumProgress) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustSpectrumProgress.ProtoReflect.Descriptor instead.
func (*AdjustSpectrumProgress) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{6}
}

func (x *AdjustSpectrumProgress) GetState() AdjustSpectrumProgress_State {
	if x != nil {
		return x.State
	}
	return AdjustSpectrumProgress_UNKNOWN
}

type AdjustSpectrumError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   AdjustSpectrumError_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gnoi.optical.AdjustSpectrumError_Type" json:"type,omitempty"`
	Detail string                   `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *AdjustSpectrumError) Reset() {
	*x = AdjustSpectrumError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustSpectrumError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustSpectrumError) ProtoMessage() {}

func (x *AdjustSpectrumError) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustSpectrumError.ProtoReflect.Descriptor instead.
func (*AdjustSpectrumError) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{7}
}

func (x *AdjustSpectrumError) GetType() AdjustSpectrumError_Type {
	if x != nil {
		return x.Type
	}
	return AdjustSpectrumError_UNSPECIFIED
}

func (x *AdjustSpectrumError) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type AdjustSpectrumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*AdjustSpectrumResponse_Progress
	//	*AdjustSpectrumResponse_Error
	Response isAdjustSpectrumResponse_Response `protobuf_oneof:"response"`
}

func (x *AdjustSpectrumResponse) Reset() {
	*x = AdjustSpectrumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustSpectrumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustSpectrumResponse) ProtoMessage() {}

func (x *AdjustSpectrumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustSpectrumResponse.ProtoReflect.Descriptor instead.
func (*AdjustSpectrumResponse) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{8}
}

func (m *AdjustSpectrumResponse) GetResponse() isAdjustSpectrumResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AdjustSpectrumResponse) GetProgress() *AdjustSpectrumProgress {
	if x, ok := x.GetResponse().(*AdjustSpectrumResponse_Progress); ok {
		return x.Progress
	}
	return nil
}

func (x *AdjustSpectrumResponse) GetError() *AdjustSpectrumError {
	if x, ok := x.GetResponse().(*AdjustSpectrumResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isAdjustSpectrumResponse_Response interface {
	isAdjustSpectrumResponse_Response()
}

type AdjustSpectrumResponse_Progress struct {
	Progress *AdjustSpectrumProgress `protobuf:"bytes,1,opt,name=progress,proto3,oneof"`
}

type AdjustSpectrumResponse_Error struct {
	Error *AdjustSpectrumError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*AdjustSpectrumResponse_Progress) isAdjustSpectrumResponse_Response() {}

func (*AdjustSpectrumResponse_Error) isAdjustSpectrumResponse_Response() {}

type CancelAdjustSpectrumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelAdjustSpectrumResponse) Reset() {
	*x = CancelAdjustSpectrumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wavelength_router_wavelength_router_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAdjustSpectrumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAdjustSpectrumResponse) ProtoMessage() {}

func (x *CancelAdjustSpectrumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wavelength_router_wavelength_router_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAdjustSpectrumResponse.ProtoReflect.Descriptor instead.
func (*CancelAdjustSpectrumResponse) Descriptor() ([]byte, []int) {
	return file_wavelength_router_wavelength_router_proto_rawDescGZIP(), []int{9}
}

var File_wavelength_router_wavelength_router_proto protoreflect.FileDescriptor

var file_wavelength_router_wavelength_router_proto_rawDesc = []byte{
	0x0a, 0x29, 0x77, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2f, 0x77, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67, 0x6e, 0x6f,
	0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x67, 0x6e, 0x6f, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x50, 0x53, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x0f, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a,
	0x11, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10, 0x02, 0x3a,
	0x02, 0x18, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53,
	0x44, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53,
	0x44, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x0e,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53, 0x44, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67,
	0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x50, 0x53, 0x44, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x3c, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42,
	0x55, 0x53, 0x59, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x48, 0x41, 0x52, 0x44, 0x57, 0x41, 0x52,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x3a, 0x02, 0x18, 0x01, 0x22,
	0x98, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53, 0x44,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53, 0x44, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x3a, 0x02, 0x18, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x17, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xef, 0x01, 0x0a, 0x15, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x74, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10, 0x02, 0x22, 0x8b, 0x01, 0x0a, 0x16,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74,
	0x72, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x3c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x48, 0x41, 0x52, 0x44, 0x57, 0x41, 0x52, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52,
	0x45, 0x10, 0x02, 0x22, 0xa3, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x92, 0x03, 0x0a, 0x10, 0x57, 0x61,
	0x76, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x53,
	0x0a, 0x09, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53, 0x44, 0x12, 0x1e, 0x2e, 0x67, 0x6e,
	0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x50, 0x53, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x6e,
	0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x50, 0x53, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02,
	0x01, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x50, 0x53, 0x44, 0x12, 0x1e, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x50, 0x53, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x50, 0x53, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88,
	0x02, 0x01, 0x12, 0x5f, 0x0a, 0x0e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x74, 0x72, 0x75, 0x6d, 0x12, 0x23, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72,
	0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x6e, 0x6f, 0x69,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x69, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x12, 0x23, 0x2e, 0x67, 0x6e,
	0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x74, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x36,
	0xd2, 0x3e, 0x05, 0x30, 0x2e, 0x32, 0x2e, 0x30, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x67, 0x6e, 0x6f, 0x69, 0x2f, 0x77, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wavelength_router_wavelength_router_proto_rawDescOnce sync.Once
	file_wavelength_router_wavelength_router_proto_rawDescData = file_wavelength_router_wavelength_router_proto_rawDesc
)

func file_wavelength_router_wavelength_router_proto_rawDescGZIP() []byte {
	file_wavelength_router_wavelength_router_proto_rawDescOnce.Do(func() {
		file_wavelength_router_wavelength_router_proto_rawDescData = protoimpl.X.CompressGZIP(file_wavelength_router_wavelength_router_proto_rawDescData)
	})
	return file_wavelength_router_wavelength_router_proto_rawDescData
}

var file_wavelength_router_wavelength_router_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_wavelength_router_wavelength_router_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_wavelength_router_wavelength_router_proto_goTypes = []interface{}{
	(AdjustPSDRequest_SignalDirection)(0),      // 0: gnoi.optical.AdjustPSDRequest.SignalDirection
	(AdjustPSDProgress_State)(0),               // 1: gnoi.optical.AdjustPSDProgress.State
	(AdjustPSDError_Type)(0),                   // 2: gnoi.optical.AdjustPSDError.Type
	(AdjustSpectrumRequest_SignalDirection)(0), // 3: gnoi.optical.AdjustSpectrumRequest.SignalDirection
	(AdjustSpectrumProgress_State)(0),          // 4: gnoi.optical.AdjustSpectrumProgress.State
	(AdjustSpectrumError_Type)(0),              // 5: gnoi.optical.AdjustSpectrumError.Type
	(*AdjustPSDRequest)(nil),                   // 6: gnoi.optical.AdjustPSDRequest
	(*AdjustPSDProgress)(nil),                  // 7: gnoi.optical.AdjustPSDProgress
	(*AdjustPSDError)(nil),                     // 8: gnoi.optical.AdjustPSDError
	(*AdjustPSDResponse)(nil),                  // 9: gnoi.optical.AdjustPSDResponse
	(*CancelAdjustPSDResponse)(nil),            // 10: gnoi.optical.CancelAdjustPSDResponse
	(*AdjustSpectrumRequest)(nil),              // 11: gnoi.optical.AdjustSpectrumRequest
	(*AdjustSpectrumProgress)(nil),             // 12: gnoi.optical.AdjustSpectrumProgress
	(*AdjustSpectrumError)(nil),                // 13: gnoi.optical.AdjustSpectrumError
	(*AdjustSpectrumResponse)(nil),             // 14: gnoi.optical.AdjustSpectrumResponse
	(*CancelAdjustSpectrumResponse)(nil),       // 15: gnoi.optical.CancelAdjustSpectrumResponse
	(*types.Path)(nil),                         // 16: gnoi.types.Path
}
var file_wavelength_router_wavelength_router_proto_depIdxs = []int32{
	16, // 0: gnoi.optical.AdjustPSDRequest.component:type_name -> gnoi.types.Path
	0,  // 1: gnoi.optical.AdjustPSDRequest.direction:type_name -> gnoi.optical.AdjustPSDRequest.SignalDirection
	1,  // 2: gnoi.optical.AdjustPSDProgress.state:type_name -> gnoi.optical.AdjustPSDProgress.State
	2,  // 3: gnoi.optical.AdjustPSDError.type:type_name -> gnoi.optical.AdjustPSDError.Type
	7,  // 4: gnoi.optical.AdjustPSDResponse.progress:type_name -> gnoi.optical.AdjustPSDProgress
	8,  // 5: gnoi.optical.AdjustPSDResponse.error:type_name -> gnoi.optical.AdjustPSDError
	16, // 6: gnoi.optical.AdjustSpectrumRequest.component:type_name -> gnoi.types.Path
	3,  // 7: gnoi.optical.AdjustSpectrumRequest.direction:type_name -> gnoi.optical.AdjustSpectrumRequest.SignalDirection
	4,  // 8: gnoi.optical.AdjustSpectrumProgress.state:type_name -> gnoi.optical.AdjustSpectrumProgress.State
	5,  // 9: gnoi.optical.AdjustSpectrumError.type:type_name -> gnoi.optical.AdjustSpectrumError.Type
	12, // 10: gnoi.optical.AdjustSpectrumResponse.progress:type_name -> gnoi.optical.AdjustSpectrumProgress
	13, // 11: gnoi.optical.AdjustSpectrumResponse.error:type_name -> gnoi.optical.AdjustSpectrumError
	6,  // 12: gnoi.optical.WavelengthRouter.AdjustPSD:input_type -> gnoi.optical.AdjustPSDRequest
	6,  // 13: gnoi.optical.WavelengthRouter.CancelAdjustPSD:input_type -> gnoi.optical.AdjustPSDRequest
	11, // 14: gnoi.optical.WavelengthRouter.AdjustSpectrum:input_type -> gnoi.optical.AdjustSpectrumRequest
	11, // 15: gnoi.optical.WavelengthRouter.CancelAdjustSpectrum:input_type -> gnoi.optical.AdjustSpectrumRequest
	9,  // 16: gnoi.optical.WavelengthRouter.AdjustPSD:output_type -> gnoi.optical.AdjustPSDResponse
	10, // 17: gnoi.optical.WavelengthRouter.CancelAdjustPSD:output_type -> gnoi.optical.CancelAdjustPSDResponse
	14, // 18: gnoi.optical.WavelengthRouter.AdjustSpectrum:output_type -> gnoi.optical.AdjustSpectrumResponse
	15, // 19: gnoi.optical.WavelengthRouter.CancelAdjustSpectrum:output_type -> gnoi.optical.CancelAdjustSpectrumResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_wavelength_router_wavelength_router_proto_init() }
func file_wavelength_router_wavelength_router_proto_init() {
	if File_wavelength_router_wavelength_router_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wavelength_router_wavelength_router_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustPSDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wavelength_router_wavelength_router_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustPSDProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wavelength_router_wavelength_router_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustPSDError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wavelength_router_wavelength_router_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustPSDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wavelength_router_wavelength_router_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAdjustPSDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wavelength_router_wavelength_router_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustSpectrumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wavelength_router_wavelength_router_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustSpectrumProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wavelength_router_wavelength_router_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustSpectrumError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wavelength_router_wavelength_router_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustSpectrumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wavelength_router_wavelength_router_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAdjustSpectrumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_wavelength_router_wavelength_router_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*AdjustPSDResponse_Progress)(nil),
		(*AdjustPSDResponse_Error)(nil),
	}
	file_wavelength_router_wavelength_router_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AdjustSpectrumResponse_Progress)(nil),
		(*AdjustSpectrumResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wavelength_router_wavelength_router_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wavelength_router_wavelength_router_proto_goTypes,
		DependencyIndexes: file_wavelength_router_wavelength_router_proto_depIdxs,
		EnumInfos:         file_wavelength_router_wavelength_router_proto_enumTypes,
		MessageInfos:      file_wavelength_router_wavelength_router_proto_msgTypes,
	}.Build()
	File_wavelength_router_wavelength_router_proto = out.File
	file_wavelength_router_wavelength_router_proto_rawDesc = nil
	file_wavelength_router_wavelength_router_proto_goTypes = nil
	file_wavelength_router_wavelength_router_proto_depIdxs = nil
}
