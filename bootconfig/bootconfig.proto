//
// Copyright 2024 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package gnoi.bootconfig;

import "github.com/openconfig/bootz/proto/bootz.proto";
import "github.com/openconfig/gnoi/types/types.proto";
import "github.com/openconfig/gnsi/authz/authz.proto";
import "github.com/openconfig/gnsi/certz/certz.proto";
import "github.com/openconfig/gnsi/pathz/pathz.proto";

option go_package = "github.com/openconfig/gnoi/bootconfig";

// The current semantic version of the gNOI BootConfig service.
option (gnoi.types.gnoi_version) = "0.1.0";

// gNOI BootConfig service provides an API to update the boot configuration
// namespace as in the Bootz protocol (https://github.com/openconfig/bootz).
// This API is often used after the Bootz turnup workflow is finished.
service BootConfig {
  // GetBootConfig gets the current boot config.
  rpc GetBootConfig(GetBootConfigRequest) returns (GetBootConfigResponse) {}

  // SetBootConfig replaces the existing boot config with the new provided one.
  rpc SetBootConfig(SetBootConfigRequest) returns (SetBootConfigResponse) {}
}

// It is safe to assume that gNOI service is hosted on the primary Controller
// Card, and the boot config is synced automatically between primary and
// secondary Controller Cards. Therefore, we don't need to specify the
// Controller Card ID.
message GetBootConfigRequest {
}

message GetBootConfigResponse {
  bootz.BootConfig boot_config = 1;
}

message SetBootConfigRequest {
  bootz.BootConfig boot_config = 1;  
  bootz.Credentials credentials = 2;
  gnsi.pathz.v1.UploadRequest pathz = 3;
  gnsi.authz.v1.UploadRequest authz = 4;
  gnsi.certz.v1.UploadRequest certificates = 5 [deprecated=true];
  bootz.CertzProfiles certz = 6; 
}

message SetBootConfigResponse {
}
