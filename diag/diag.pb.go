// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: diag/diag.proto

package diag

import (
	types "github.com/openconfig/gnoi/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrbsPolynomial int32

const (
	PrbsPolynomial_PRBS_POLYNOMIAL_UNKNOWN PrbsPolynomial = 0
	PrbsPolynomial_PRBS_POLYNOMIAL_PRBS7   PrbsPolynomial = 1
	PrbsPolynomial_PRBS_POLYNOMIAL_PRBS9   PrbsPolynomial = 2
	PrbsPolynomial_PRBS_POLYNOMIAL_PRBS15  PrbsPolynomial = 3
	PrbsPolynomial_PRBS_POLYNOMIAL_PRBS20  PrbsPolynomial = 4
	PrbsPolynomial_PRBS_POLYNOMIAL_PRBS23  PrbsPolynomial = 5
	PrbsPolynomial_PRBS_POLYNOMIAL_PRBS31  PrbsPolynomial = 6
)

// Enum value maps for PrbsPolynomial.
var (
	PrbsPolynomial_name = map[int32]string{
		0: "PRBS_POLYNOMIAL_UNKNOWN",
		1: "PRBS_POLYNOMIAL_PRBS7",
		2: "PRBS_POLYNOMIAL_PRBS9",
		3: "PRBS_POLYNOMIAL_PRBS15",
		4: "PRBS_POLYNOMIAL_PRBS20",
		5: "PRBS_POLYNOMIAL_PRBS23",
		6: "PRBS_POLYNOMIAL_PRBS31",
	}
	PrbsPolynomial_value = map[string]int32{
		"PRBS_POLYNOMIAL_UNKNOWN": 0,
		"PRBS_POLYNOMIAL_PRBS7":   1,
		"PRBS_POLYNOMIAL_PRBS9":   2,
		"PRBS_POLYNOMIAL_PRBS15":  3,
		"PRBS_POLYNOMIAL_PRBS20":  4,
		"PRBS_POLYNOMIAL_PRBS23":  5,
		"PRBS_POLYNOMIAL_PRBS31":  6,
	}
)

func (x PrbsPolynomial) Enum() *PrbsPolynomial {
	p := new(PrbsPolynomial)
	*p = x
	return p
}

func (x PrbsPolynomial) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrbsPolynomial) Descriptor() protoreflect.EnumDescriptor {
	return file_diag_diag_proto_enumTypes[0].Descriptor()
}

func (PrbsPolynomial) Type() protoreflect.EnumType {
	return &file_diag_diag_proto_enumTypes[0]
}

func (x PrbsPolynomial) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrbsPolynomial.Descriptor instead.
func (PrbsPolynomial) EnumDescriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{0}
}

type BertStatus int32

const (
	BertStatus_BERT_STATUS_UNKNOWN                     BertStatus = 0
	BertStatus_BERT_STATUS_OK                          BertStatus = 1
	BertStatus_BERT_STATUS_NON_EXISTENT_PORT           BertStatus = 2
	BertStatus_BERT_STATUS_HARDWARE_ACCESS_ERROR       BertStatus = 3
	BertStatus_BERT_STATUS_UNSUPPORTED_PRBS_POLYNOMIAL BertStatus = 4
	BertStatus_BERT_STATUS_PORT_ALREADY_IN_BERT        BertStatus = 5
	BertStatus_BERT_STATUS_PORT_NOT_RUNNING_BERT       BertStatus = 6
	BertStatus_BERT_STATUS_TEST_DURATION_TOO_SHORT     BertStatus = 7
	BertStatus_BERT_STATUS_TEST_DURATION_TOO_LONG      BertStatus = 8
	BertStatus_BERT_STATUS_OPERATION_ID_NOT_FOUND      BertStatus = 9
	BertStatus_BERT_STATUS_OPERATION_ID_IN_USE         BertStatus = 10
	BertStatus_BERT_STATUS_PEER_LOCK_FAILURE           BertStatus = 11
	BertStatus_BERT_STATUS_PEER_LOCK_LOST              BertStatus = 12
	BertStatus_BERT_STATUS_INTERNAL_ERROR              BertStatus = 13
)

// Enum value maps for BertStatus.
var (
	BertStatus_name = map[int32]string{
		0:  "BERT_STATUS_UNKNOWN",
		1:  "BERT_STATUS_OK",
		2:  "BERT_STATUS_NON_EXISTENT_PORT",
		3:  "BERT_STATUS_HARDWARE_ACCESS_ERROR",
		4:  "BERT_STATUS_UNSUPPORTED_PRBS_POLYNOMIAL",
		5:  "BERT_STATUS_PORT_ALREADY_IN_BERT",
		6:  "BERT_STATUS_PORT_NOT_RUNNING_BERT",
		7:  "BERT_STATUS_TEST_DURATION_TOO_SHORT",
		8:  "BERT_STATUS_TEST_DURATION_TOO_LONG",
		9:  "BERT_STATUS_OPERATION_ID_NOT_FOUND",
		10: "BERT_STATUS_OPERATION_ID_IN_USE",
		11: "BERT_STATUS_PEER_LOCK_FAILURE",
		12: "BERT_STATUS_PEER_LOCK_LOST",
		13: "BERT_STATUS_INTERNAL_ERROR",
	}
	BertStatus_value = map[string]int32{
		"BERT_STATUS_UNKNOWN":                     0,
		"BERT_STATUS_OK":                          1,
		"BERT_STATUS_NON_EXISTENT_PORT":           2,
		"BERT_STATUS_HARDWARE_ACCESS_ERROR":       3,
		"BERT_STATUS_UNSUPPORTED_PRBS_POLYNOMIAL": 4,
		"BERT_STATUS_PORT_ALREADY_IN_BERT":        5,
		"BERT_STATUS_PORT_NOT_RUNNING_BERT":       6,
		"BERT_STATUS_TEST_DURATION_TOO_SHORT":     7,
		"BERT_STATUS_TEST_DURATION_TOO_LONG":      8,
		"BERT_STATUS_OPERATION_ID_NOT_FOUND":      9,
		"BERT_STATUS_OPERATION_ID_IN_USE":         10,
		"BERT_STATUS_PEER_LOCK_FAILURE":           11,
		"BERT_STATUS_PEER_LOCK_LOST":              12,
		"BERT_STATUS_INTERNAL_ERROR":              13,
	}
)

func (x BertStatus) Enum() *BertStatus {
	p := new(BertStatus)
	*p = x
	return p
}

func (x BertStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BertStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_diag_diag_proto_enumTypes[1].Descriptor()
}

func (BertStatus) Type() protoreflect.EnumType {
	return &file_diag_diag_proto_enumTypes[1]
}

func (x BertStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BertStatus.Descriptor instead.
func (BertStatus) EnumDescriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{1}
}

type StartBERTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BertOperationId string                             `protobuf:"bytes,1,opt,name=bert_operation_id,json=bertOperationId,proto3" json:"bert_operation_id,omitempty"`
	PerPortRequests []*StartBERTRequest_PerPortRequest `protobuf:"bytes,2,rep,name=per_port_requests,json=perPortRequests,proto3" json:"per_port_requests,omitempty"`
}

func (x *StartBERTRequest) Reset() {
	*x = StartBERTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBERTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBERTRequest) ProtoMessage() {}

func (x *StartBERTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBERTRequest.ProtoReflect.Descriptor instead.
func (*StartBERTRequest) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{0}
}

func (x *StartBERTRequest) GetBertOperationId() string {
	if x != nil {
		return x.BertOperationId
	}
	return ""
}

func (x *StartBERTRequest) GetPerPortRequests() []*StartBERTRequest_PerPortRequest {
	if x != nil {
		return x.PerPortRequests
	}
	return nil
}

type StartBERTResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BertOperationId  string                               `protobuf:"bytes,1,opt,name=bert_operation_id,json=bertOperationId,proto3" json:"bert_operation_id,omitempty"`
	PerPortResponses []*StartBERTResponse_PerPortResponse `protobuf:"bytes,2,rep,name=per_port_responses,json=perPortResponses,proto3" json:"per_port_responses,omitempty"`
}

func (x *StartBERTResponse) Reset() {
	*x = StartBERTResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBERTResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBERTResponse) ProtoMessage() {}

func (x *StartBERTResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBERTResponse.ProtoReflect.Descriptor instead.
func (*StartBERTResponse) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{1}
}

func (x *StartBERTResponse) GetBertOperationId() string {
	if x != nil {
		return x.BertOperationId
	}
	return ""
}

func (x *StartBERTResponse) GetPerPortResponses() []*StartBERTResponse_PerPortResponse {
	if x != nil {
		return x.PerPortResponses
	}
	return nil
}

type StopBERTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BertOperationId string                            `protobuf:"bytes,1,opt,name=bert_operation_id,json=bertOperationId,proto3" json:"bert_operation_id,omitempty"`
	PerPortRequests []*StopBERTRequest_PerPortRequest `protobuf:"bytes,2,rep,name=per_port_requests,json=perPortRequests,proto3" json:"per_port_requests,omitempty"`
}

func (x *StopBERTRequest) Reset() {
	*x = StopBERTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBERTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBERTRequest) ProtoMessage() {}

func (x *StopBERTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBERTRequest.ProtoReflect.Descriptor instead.
func (*StopBERTRequest) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{2}
}

func (x *StopBERTRequest) GetBertOperationId() string {
	if x != nil {
		return x.BertOperationId
	}
	return ""
}

func (x *StopBERTRequest) GetPerPortRequests() []*StopBERTRequest_PerPortRequest {
	if x != nil {
		return x.PerPortRequests
	}
	return nil
}

type StopBERTResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BertOperationId  string                              `protobuf:"bytes,1,opt,name=bert_operation_id,json=bertOperationId,proto3" json:"bert_operation_id,omitempty"`
	PerPortResponses []*StopBERTResponse_PerPortResponse `protobuf:"bytes,2,rep,name=per_port_responses,json=perPortResponses,proto3" json:"per_port_responses,omitempty"`
}

func (x *StopBERTResponse) Reset() {
	*x = StopBERTResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBERTResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBERTResponse) ProtoMessage() {}

func (x *StopBERTResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBERTResponse.ProtoReflect.Descriptor instead.
func (*StopBERTResponse) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{3}
}

func (x *StopBERTResponse) GetBertOperationId() string {
	if x != nil {
		return x.BertOperationId
	}
	return ""
}

func (x *StopBERTResponse) GetPerPortResponses() []*StopBERTResponse_PerPortResponse {
	if x != nil {
		return x.PerPortResponses
	}
	return nil
}

type GetBERTResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BertOperationId    string                                 `protobuf:"bytes,1,opt,name=bert_operation_id,json=bertOperationId,proto3" json:"bert_operation_id,omitempty"`
	PerPortRequests    []*GetBERTResultRequest_PerPortRequest `protobuf:"bytes,2,rep,name=per_port_requests,json=perPortRequests,proto3" json:"per_port_requests,omitempty"`
	ResultFromAllPorts bool                                   `protobuf:"varint,3,opt,name=result_from_all_ports,json=resultFromAllPorts,proto3" json:"result_from_all_ports,omitempty"`
}

func (x *GetBERTResultRequest) Reset() {
	*x = GetBERTResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBERTResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBERTResultRequest) ProtoMessage() {}

func (x *GetBERTResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBERTResultRequest.ProtoReflect.Descriptor instead.
func (*GetBERTResultRequest) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{4}
}

func (x *GetBERTResultRequest) GetBertOperationId() string {
	if x != nil {
		return x.BertOperationId
	}
	return ""
}

func (x *GetBERTResultRequest) GetPerPortRequests() []*GetBERTResultRequest_PerPortRequest {
	if x != nil {
		return x.PerPortRequests
	}
	return nil
}

func (x *GetBERTResultRequest) GetResultFromAllPorts() bool {
	if x != nil {
		return x.ResultFromAllPorts
	}
	return false
}

type GetBERTResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerPortResponses []*GetBERTResultResponse_PerPortResponse `protobuf:"bytes,1,rep,name=per_port_responses,json=perPortResponses,proto3" json:"per_port_responses,omitempty"`
}

func (x *GetBERTResultResponse) Reset() {
	*x = GetBERTResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBERTResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBERTResultResponse) ProtoMessage() {}

func (x *GetBERTResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBERTResultResponse.ProtoReflect.Descriptor instead.
func (*GetBERTResultResponse) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{5}
}

func (x *GetBERTResultResponse) GetPerPortResponses() []*GetBERTResultResponse_PerPortResponse {
	if x != nil {
		return x.PerPortResponses
	}
	return nil
}

type StartBERTRequest_PerPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface          *types.Path    `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	PrbsPolynomial     PrbsPolynomial `protobuf:"varint,2,opt,name=prbs_polynomial,json=prbsPolynomial,proto3,enum=gnoi.diag.PrbsPolynomial" json:"prbs_polynomial,omitempty"`
	TestDurationInSecs uint32         `protobuf:"varint,3,opt,name=test_duration_in_secs,json=testDurationInSecs,proto3" json:"test_duration_in_secs,omitempty"`
}

func (x *StartBERTRequest_PerPortRequest) Reset() {
	*x = StartBERTRequest_PerPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBERTRequest_PerPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBERTRequest_PerPortRequest) ProtoMessage() {}

func (x *StartBERTRequest_PerPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBERTRequest_PerPortRequest.ProtoReflect.Descriptor instead.
func (*StartBERTRequest_PerPortRequest) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{0, 0}
}

func (x *StartBERTRequest_PerPortRequest) GetInterface() *types.Path {
	if x != nil {
		return x.Interface
	}
	return nil
}

func (x *StartBERTRequest_PerPortRequest) GetPrbsPolynomial() PrbsPolynomial {
	if x != nil {
		return x.PrbsPolynomial
	}
	return PrbsPolynomial_PRBS_POLYNOMIAL_UNKNOWN
}

func (x *StartBERTRequest_PerPortRequest) GetTestDurationInSecs() uint32 {
	if x != nil {
		return x.TestDurationInSecs
	}
	return 0
}

type StartBERTResponse_PerPortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface *types.Path `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	Status    BertStatus  `protobuf:"varint,2,opt,name=status,proto3,enum=gnoi.diag.BertStatus" json:"status,omitempty"`
}

func (x *StartBERTResponse_PerPortResponse) Reset() {
	*x = StartBERTResponse_PerPortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBERTResponse_PerPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBERTResponse_PerPortResponse) ProtoMessage() {}

func (x *StartBERTResponse_PerPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBERTResponse_PerPortResponse.ProtoReflect.Descriptor instead.
func (*StartBERTResponse_PerPortResponse) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StartBERTResponse_PerPortResponse) GetInterface() *types.Path {
	if x != nil {
		return x.Interface
	}
	return nil
}

func (x *StartBERTResponse_PerPortResponse) GetStatus() BertStatus {
	if x != nil {
		return x.Status
	}
	return BertStatus_BERT_STATUS_UNKNOWN
}

type StopBERTRequest_PerPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface *types.Path `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
}

func (x *StopBERTRequest_PerPortRequest) Reset() {
	*x = StopBERTRequest_PerPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBERTRequest_PerPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBERTRequest_PerPortRequest) ProtoMessage() {}

func (x *StopBERTRequest_PerPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBERTRequest_PerPortRequest.ProtoReflect.Descriptor instead.
func (*StopBERTRequest_PerPortRequest) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{2, 0}
}

func (x *StopBERTRequest_PerPortRequest) GetInterface() *types.Path {
	if x != nil {
		return x.Interface
	}
	return nil
}

type StopBERTResponse_PerPortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface *types.Path `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	Status    BertStatus  `protobuf:"varint,2,opt,name=status,proto3,enum=gnoi.diag.BertStatus" json:"status,omitempty"`
}

func (x *StopBERTResponse_PerPortResponse) Reset() {
	*x = StopBERTResponse_PerPortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBERTResponse_PerPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBERTResponse_PerPortResponse) ProtoMessage() {}

func (x *StopBERTResponse_PerPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBERTResponse_PerPortResponse.ProtoReflect.Descriptor instead.
func (*StopBERTResponse_PerPortResponse) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{3, 0}
}

func (x *StopBERTResponse_PerPortResponse) GetInterface() *types.Path {
	if x != nil {
		return x.Interface
	}
	return nil
}

func (x *StopBERTResponse_PerPortResponse) GetStatus() BertStatus {
	if x != nil {
		return x.Status
	}
	return BertStatus_BERT_STATUS_UNKNOWN
}

type GetBERTResultRequest_PerPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface *types.Path `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
}

func (x *GetBERTResultRequest_PerPortRequest) Reset() {
	*x = GetBERTResultRequest_PerPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBERTResultRequest_PerPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBERTResultRequest_PerPortRequest) ProtoMessage() {}

func (x *GetBERTResultRequest_PerPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBERTResultRequest_PerPortRequest.ProtoReflect.Descriptor instead.
func (*GetBERTResultRequest_PerPortRequest) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetBERTResultRequest_PerPortRequest) GetInterface() *types.Path {
	if x != nil {
		return x.Interface
	}
	return nil
}

type GetBERTResultResponse_PerPortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface                  *types.Path    `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	Status                     BertStatus     `protobuf:"varint,2,opt,name=status,proto3,enum=gnoi.diag.BertStatus" json:"status,omitempty"`
	BertOperationId            string         `protobuf:"bytes,3,opt,name=bert_operation_id,json=bertOperationId,proto3" json:"bert_operation_id,omitempty"`
	PrbsPolynomial             PrbsPolynomial `protobuf:"varint,4,opt,name=prbs_polynomial,json=prbsPolynomial,proto3,enum=gnoi.diag.PrbsPolynomial" json:"prbs_polynomial,omitempty"`
	LastBertStartTimestamp     uint64         `protobuf:"varint,5,opt,name=last_bert_start_timestamp,json=lastBertStartTimestamp,proto3" json:"last_bert_start_timestamp,omitempty"`
	LastBertGetResultTimestamp uint64         `protobuf:"varint,6,opt,name=last_bert_get_result_timestamp,json=lastBertGetResultTimestamp,proto3" json:"last_bert_get_result_timestamp,omitempty"`
	PeerLockEstablished        bool           `protobuf:"varint,7,opt,name=peer_lock_established,json=peerLockEstablished,proto3" json:"peer_lock_established,omitempty"`
	PeerLockLost               bool           `protobuf:"varint,8,opt,name=peer_lock_lost,json=peerLockLost,proto3" json:"peer_lock_lost,omitempty"`
	ErrorCountPerMinute        []uint32       `protobuf:"varint,9,rep,packed,name=error_count_per_minute,json=errorCountPerMinute,proto3" json:"error_count_per_minute,omitempty"`
	TotalErrors                uint64         `protobuf:"varint,10,opt,name=total_errors,json=totalErrors,proto3" json:"total_errors,omitempty"`
}

func (x *GetBERTResultResponse_PerPortResponse) Reset() {
	*x = GetBERTResultResponse_PerPortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diag_diag_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBERTResultResponse_PerPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBERTResultResponse_PerPortResponse) ProtoMessage() {}

func (x *GetBERTResultResponse_PerPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diag_diag_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBERTResultResponse_PerPortResponse.ProtoReflect.Descriptor instead.
func (*GetBERTResultResponse_PerPortResponse) Descriptor() ([]byte, []int) {
	return file_diag_diag_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetBERTResultResponse_PerPortResponse) GetInterface() *types.Path {
	if x != nil {
		return x.Interface
	}
	return nil
}

func (x *GetBERTResultResponse_PerPortResponse) GetStatus() BertStatus {
	if x != nil {
		return x.Status
	}
	return BertStatus_BERT_STATUS_UNKNOWN
}

func (x *GetBERTResultResponse_PerPortResponse) GetBertOperationId() string {
	if x != nil {
		return x.BertOperationId
	}
	return ""
}

func (x *GetBERTResultResponse_PerPortResponse) GetPrbsPolynomial() PrbsPolynomial {
	if x != nil {
		return x.PrbsPolynomial
	}
	return PrbsPolynomial_PRBS_POLYNOMIAL_UNKNOWN
}

func (x *GetBERTResultResponse_PerPortResponse) GetLastBertStartTimestamp() uint64 {
	if x != nil {
		return x.LastBertStartTimestamp
	}
	return 0
}

func (x *GetBERTResultResponse_PerPortResponse) GetLastBertGetResultTimestamp() uint64 {
	if x != nil {
		return x.LastBertGetResultTimestamp
	}
	return 0
}

func (x *GetBERTResultResponse_PerPortResponse) GetPeerLockEstablished() bool {
	if x != nil {
		return x.PeerLockEstablished
	}
	return false
}

func (x *GetBERTResultResponse_PerPortResponse) GetPeerLockLost() bool {
	if x != nil {
		return x.PeerLockLost
	}
	return false
}

func (x *GetBERTResultResponse_PerPortResponse) GetErrorCountPerMinute() []uint32 {
	if x != nil {
		return x.ErrorCountPerMinute
	}
	return nil
}

func (x *GetBERTResultResponse_PerPortResponse) GetTotalErrors() uint64 {
	if x != nil {
		return x.TotalErrors
	}
	return 0
}

var File_diag_diag_proto protoreflect.FileDescriptor

var file_diag_diag_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x69, 0x61, 0x67, 0x2f, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x1a, 0x2c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x6f, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x02, 0x0a, 0x10, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x62, 0x65, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x65, 0x72, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x11, 0x70,
	0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69,
	0x61, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x1a, 0xb7, 0x01, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x69,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x70, 0x72, 0x62, 0x73, 0x5f, 0x70,
	0x6f, 0x6c, 0x79, 0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x50, 0x72, 0x62, 0x73,
	0x50, 0x6f, 0x6c, 0x79, 0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x52, 0x0e, 0x70, 0x72, 0x62, 0x73,
	0x50, 0x6f, 0x6c, 0x79, 0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x65, 0x73, 0x74, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x73, 0x22, 0x8d, 0x02,
	0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x65, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x62, 0x65, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x5a, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6e,
	0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x45, 0x52,
	0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x70, 0x65, 0x72, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x1a, 0x70, 0x0a, 0x0f, 0x50,
	0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd6, 0x01,
	0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x65, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x65,
	0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x55, 0x0a,
	0x11, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e,
	0x64, 0x69, 0x61, 0x67, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x1a, 0x40, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x69,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x42,
	0x45, 0x52, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x62,
	0x65, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x65, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x10, 0x70, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x1a, 0x70, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61,
	0x67, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x93, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x45, 0x52, 0x54,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x62, 0x65, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x65, 0x72, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x11, 0x70, 0x65, 0x72,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x40, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x8b, 0x05, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x10, 0x70, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x1a, 0x91, 0x04, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6e,
	0x6f, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e,
	0x64, 0x69, 0x61, 0x67, 0x2e, 0x42, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x65, 0x72, 0x74, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x62, 0x65, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x70, 0x72, 0x62, 0x73, 0x5f, 0x70, 0x6f, 0x6c, 0x79,
	0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x67,
	0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x50, 0x72, 0x62, 0x73, 0x50, 0x6f, 0x6c,
	0x79, 0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x52, 0x0e, 0x70, 0x72, 0x62, 0x73, 0x50, 0x6f, 0x6c,
	0x79, 0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x62, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74,
	0x42, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x42, 0x0a, 0x1e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x65, 0x72, 0x74, 0x5f,
	0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x6c, 0x61, 0x73, 0x74,
	0x42, 0x65, 0x72, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x70, 0x65, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x45,
	0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x16, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2a, 0xd3, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x62,
	0x73, 0x50, 0x6f, 0x6c, 0x79, 0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x17, 0x50,
	0x52, 0x42, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x4e, 0x4f, 0x4d, 0x49, 0x41, 0x4c, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x42, 0x53,
	0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x4e, 0x4f, 0x4d, 0x49, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x42, 0x53,
	0x37, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x42, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x59,
	0x4e, 0x4f, 0x4d, 0x49, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x42, 0x53, 0x39, 0x10, 0x02, 0x12, 0x1a,
	0x0a, 0x16, 0x50, 0x52, 0x42, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x4e, 0x4f, 0x4d, 0x49, 0x41,
	0x4c, 0x5f, 0x50, 0x52, 0x42, 0x53, 0x31, 0x35, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52,
	0x42, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x4e, 0x4f, 0x4d, 0x49, 0x41, 0x4c, 0x5f, 0x50, 0x52,
	0x42, 0x53, 0x32, 0x30, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x42, 0x53, 0x5f, 0x50,
	0x4f, 0x4c, 0x59, 0x4e, 0x4f, 0x4d, 0x49, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x42, 0x53, 0x32, 0x33,
	0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x42, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x4e,
	0x4f, 0x4d, 0x49, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x42, 0x53, 0x33, 0x31, 0x10, 0x06, 0x2a, 0xfe,
	0x03, 0x0a, 0x0a, 0x42, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a,
	0x13, 0x42, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x45, 0x52, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x45,
	0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x02, 0x12, 0x25, 0x0a,
	0x21, 0x42, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x41, 0x52,
	0x44, 0x57, 0x41, 0x52, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x2b, 0x0a, 0x27, 0x42, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f,
	0x50, 0x52, 0x42, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x4e, 0x4f, 0x4d, 0x49, 0x41, 0x4c, 0x10,
	0x04, 0x12, 0x24, 0x0a, 0x20, 0x42, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e,
	0x5f, 0x42, 0x45, 0x52, 0x54, 0x10, 0x05, 0x12, 0x25, 0x0a, 0x21, 0x42, 0x45, 0x52, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x45, 0x52, 0x54, 0x10, 0x06, 0x12, 0x27,
	0x0a, 0x23, 0x42, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x45,
	0x53, 0x54, 0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x4f, 0x5f,
	0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x07, 0x12, 0x26, 0x0a, 0x22, 0x42, 0x45, 0x52, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x55, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x08, 0x12,
	0x26, 0x0a, 0x22, 0x42, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x09, 0x12, 0x23, 0x0a, 0x1f, 0x42, 0x45, 0x52, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x49, 0x44, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x0a, 0x12, 0x21, 0x0a, 0x1d,
	0x42, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x45, 0x52,
	0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x0b, 0x12,
	0x1e, 0x0a, 0x1a, 0x42, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x45, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4c, 0x4f, 0x53, 0x54, 0x10, 0x0c, 0x12,
	0x1e, 0x0a, 0x1a, 0x42, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0d, 0x32,
	0xed, 0x01, 0x0a, 0x04, 0x44, 0x69, 0x61, 0x67, 0x12, 0x48, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x42, 0x45, 0x52, 0x54, 0x12, 0x1b, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61,
	0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x45, 0x52, 0x54, 0x12, 0x1a,
	0x2e, 0x67, 0x6e, 0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x42,
	0x45, 0x52, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x6e, 0x6f,
	0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x45, 0x52, 0x54, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x42, 0x45, 0x52, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x6e, 0x6f,
	0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x45, 0x52, 0x54, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x6e,
	0x6f, 0x69, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x45, 0x52, 0x54, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x29, 0xd2, 0x3e, 0x05, 0x30, 0x2e, 0x31, 0x2e, 0x30, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x67, 0x6e, 0x6f, 0x69, 0x2f, 0x64, 0x69, 0x61, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_diag_diag_proto_rawDescOnce sync.Once
	file_diag_diag_proto_rawDescData = file_diag_diag_proto_rawDesc
)

func file_diag_diag_proto_rawDescGZIP() []byte {
	file_diag_diag_proto_rawDescOnce.Do(func() {
		file_diag_diag_proto_rawDescData = protoimpl.X.CompressGZIP(file_diag_diag_proto_rawDescData)
	})
	return file_diag_diag_proto_rawDescData
}

var file_diag_diag_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_diag_diag_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_diag_diag_proto_goTypes = []interface{}{
	(PrbsPolynomial)(0),                           // 0: gnoi.diag.PrbsPolynomial
	(BertStatus)(0),                               // 1: gnoi.diag.BertStatus
	(*StartBERTRequest)(nil),                      // 2: gnoi.diag.StartBERTRequest
	(*StartBERTResponse)(nil),                     // 3: gnoi.diag.StartBERTResponse
	(*StopBERTRequest)(nil),                       // 4: gnoi.diag.StopBERTRequest
	(*StopBERTResponse)(nil),                      // 5: gnoi.diag.StopBERTResponse
	(*GetBERTResultRequest)(nil),                  // 6: gnoi.diag.GetBERTResultRequest
	(*GetBERTResultResponse)(nil),                 // 7: gnoi.diag.GetBERTResultResponse
	(*StartBERTRequest_PerPortRequest)(nil),       // 8: gnoi.diag.StartBERTRequest.PerPortRequest
	(*StartBERTResponse_PerPortResponse)(nil),     // 9: gnoi.diag.StartBERTResponse.PerPortResponse
	(*StopBERTRequest_PerPortRequest)(nil),        // 10: gnoi.diag.StopBERTRequest.PerPortRequest
	(*StopBERTResponse_PerPortResponse)(nil),      // 11: gnoi.diag.StopBERTResponse.PerPortResponse
	(*GetBERTResultRequest_PerPortRequest)(nil),   // 12: gnoi.diag.GetBERTResultRequest.PerPortRequest
	(*GetBERTResultResponse_PerPortResponse)(nil), // 13: gnoi.diag.GetBERTResultResponse.PerPortResponse
	(*types.Path)(nil),                            // 14: gnoi.types.Path
}
var file_diag_diag_proto_depIdxs = []int32{
	8,  // 0: gnoi.diag.StartBERTRequest.per_port_requests:type_name -> gnoi.diag.StartBERTRequest.PerPortRequest
	9,  // 1: gnoi.diag.StartBERTResponse.per_port_responses:type_name -> gnoi.diag.StartBERTResponse.PerPortResponse
	10, // 2: gnoi.diag.StopBERTRequest.per_port_requests:type_name -> gnoi.diag.StopBERTRequest.PerPortRequest
	11, // 3: gnoi.diag.StopBERTResponse.per_port_responses:type_name -> gnoi.diag.StopBERTResponse.PerPortResponse
	12, // 4: gnoi.diag.GetBERTResultRequest.per_port_requests:type_name -> gnoi.diag.GetBERTResultRequest.PerPortRequest
	13, // 5: gnoi.diag.GetBERTResultResponse.per_port_responses:type_name -> gnoi.diag.GetBERTResultResponse.PerPortResponse
	14, // 6: gnoi.diag.StartBERTRequest.PerPortRequest.interface:type_name -> gnoi.types.Path
	0,  // 7: gnoi.diag.StartBERTRequest.PerPortRequest.prbs_polynomial:type_name -> gnoi.diag.PrbsPolynomial
	14, // 8: gnoi.diag.StartBERTResponse.PerPortResponse.interface:type_name -> gnoi.types.Path
	1,  // 9: gnoi.diag.StartBERTResponse.PerPortResponse.status:type_name -> gnoi.diag.BertStatus
	14, // 10: gnoi.diag.StopBERTRequest.PerPortRequest.interface:type_name -> gnoi.types.Path
	14, // 11: gnoi.diag.StopBERTResponse.PerPortResponse.interface:type_name -> gnoi.types.Path
	1,  // 12: gnoi.diag.StopBERTResponse.PerPortResponse.status:type_name -> gnoi.diag.BertStatus
	14, // 13: gnoi.diag.GetBERTResultRequest.PerPortRequest.interface:type_name -> gnoi.types.Path
	14, // 14: gnoi.diag.GetBERTResultResponse.PerPortResponse.interface:type_name -> gnoi.types.Path
	1,  // 15: gnoi.diag.GetBERTResultResponse.PerPortResponse.status:type_name -> gnoi.diag.BertStatus
	0,  // 16: gnoi.diag.GetBERTResultResponse.PerPortResponse.prbs_polynomial:type_name -> gnoi.diag.PrbsPolynomial
	2,  // 17: gnoi.diag.Diag.StartBERT:input_type -> gnoi.diag.StartBERTRequest
	4,  // 18: gnoi.diag.Diag.StopBERT:input_type -> gnoi.diag.StopBERTRequest
	6,  // 19: gnoi.diag.Diag.GetBERTResult:input_type -> gnoi.diag.GetBERTResultRequest
	3,  // 20: gnoi.diag.Diag.StartBERT:output_type -> gnoi.diag.StartBERTResponse
	5,  // 21: gnoi.diag.Diag.StopBERT:output_type -> gnoi.diag.StopBERTResponse
	7,  // 22: gnoi.diag.Diag.GetBERTResult:output_type -> gnoi.diag.GetBERTResultResponse
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_diag_diag_proto_init() }
func file_diag_diag_proto_init() {
	if File_diag_diag_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_diag_diag_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBERTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBERTResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBERTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBERTResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBERTResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBERTResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBERTRequest_PerPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBERTResponse_PerPortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBERTRequest_PerPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBERTResponse_PerPortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBERTResultRequest_PerPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diag_diag_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBERTResultResponse_PerPortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_diag_diag_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_diag_diag_proto_goTypes,
		DependencyIndexes: file_diag_diag_proto_depIdxs,
		EnumInfos:         file_diag_diag_proto_enumTypes,
		MessageInfos:      file_diag_diag_proto_msgTypes,
	}.Build()
	File_diag_diag_proto = out.File
	file_diag_diag_proto_rawDesc = nil
	file_diag_diag_proto_goTypes = nil
	file_diag_diag_proto_depIdxs = nil
}
