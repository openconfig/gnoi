// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: github.com/openconfig/gnoi/transceiver_firmware_install/transceiver_firmware_install.proto

package transceiver_firmware_install

import (
	types "github.com/openconfig/gnoi/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstallStatus int32

const (
	InstallStatus_INSTALL_STATUS_UNKNOWN              InstallStatus = 0
	InstallStatus_INSTALL_STATUS_TRANSFER_IN_PROGRESS InstallStatus = 1
	InstallStatus_INSTALL_STATUS_INSTALL_IN_PROGRESS  InstallStatus = 2
	InstallStatus_INSTALL_STATUS_COMPLETED            InstallStatus = 3
	InstallStatus_INSTALL_STATUS_FAILED               InstallStatus = 4
)

// Enum value maps for InstallStatus.
var (
	InstallStatus_name = map[int32]string{
		0: "INSTALL_STATUS_UNKNOWN",
		1: "INSTALL_STATUS_TRANSFER_IN_PROGRESS",
		2: "INSTALL_STATUS_INSTALL_IN_PROGRESS",
		3: "INSTALL_STATUS_COMPLETED",
		4: "INSTALL_STATUS_FAILED",
	}
	InstallStatus_value = map[string]int32{
		"INSTALL_STATUS_UNKNOWN":              0,
		"INSTALL_STATUS_TRANSFER_IN_PROGRESS": 1,
		"INSTALL_STATUS_INSTALL_IN_PROGRESS":  2,
		"INSTALL_STATUS_COMPLETED":            3,
		"INSTALL_STATUS_FAILED":               4,
	}
)

func (x InstallStatus) Enum() *InstallStatus {
	p := new(InstallStatus)
	*p = x
	return p
}

func (x InstallStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstallStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_enumTypes[0].Descriptor()
}

func (InstallStatus) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_enumTypes[0]
}

func (x InstallStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstallStatus.Descriptor instead.
func (InstallStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{0}
}

type TransferError_Type int32

const (
	TransferError_UNSPECIFIED          TransferError_Type = 0
	TransferError_INCOMPATIBLE         TransferError_Type = 1
	TransferError_TOO_LARGE            TransferError_Type = 2
	TransferError_PARSE_FAIL           TransferError_Type = 3
	TransferError_INTEGRITY_FAIL       TransferError_Type = 4
	TransferError_TRANSFER_IN_PROGRESS TransferError_Type = 5
	TransferError_INVALID_ARGUMENT     TransferError_Type = 6
)

// Enum value maps for TransferError_Type.
var (
	TransferError_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INCOMPATIBLE",
		2: "TOO_LARGE",
		3: "PARSE_FAIL",
		4: "INTEGRITY_FAIL",
		5: "TRANSFER_IN_PROGRESS",
		6: "INVALID_ARGUMENT",
	}
	TransferError_Type_value = map[string]int32{
		"UNSPECIFIED":          0,
		"INCOMPATIBLE":         1,
		"TOO_LARGE":            2,
		"PARSE_FAIL":           3,
		"INTEGRITY_FAIL":       4,
		"TRANSFER_IN_PROGRESS": 5,
		"INVALID_ARGUMENT":     6,
	}
)

func (x TransferError_Type) Enum() *TransferError_Type {
	p := new(TransferError_Type)
	*p = x
	return p
}

func (x TransferError_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferError_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_enumTypes[1].Descriptor()
}

func (TransferError_Type) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_enumTypes[1]
}

func (x TransferError_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferError_Type.Descriptor instead.
func (TransferError_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{9, 0}
}

type InstallError_Type int32

const (
	InstallError_UNSPECIFIED           InstallError_Type = 0
	InstallError_NON_EXISTENT_VERSION  InstallError_Type = 1
	InstallError_INCOMPATIBLE          InstallError_Type = 2
	InstallError_TOO_LARGE             InstallError_Type = 3
	InstallError_PARSE_FAIL            InstallError_Type = 4
	InstallError_INTEGRITY_FAIL        InstallError_Type = 5
	InstallError_INSTALL_IN_PROGRESS   InstallError_Type = 6
	InstallError_UNEXPECTED_SWITCHOVER InstallError_Type = 7
	InstallError_EMPTY_FIRMWARE_BANK   InstallError_Type = 8
)

// Enum value maps for InstallError_Type.
var (
	InstallError_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "NON_EXISTENT_VERSION",
		2: "INCOMPATIBLE",
		3: "TOO_LARGE",
		4: "PARSE_FAIL",
		5: "INTEGRITY_FAIL",
		6: "INSTALL_IN_PROGRESS",
		7: "UNEXPECTED_SWITCHOVER",
		8: "EMPTY_FIRMWARE_BANK",
	}
	InstallError_Type_value = map[string]int32{
		"UNSPECIFIED":           0,
		"NON_EXISTENT_VERSION":  1,
		"INCOMPATIBLE":          2,
		"TOO_LARGE":             3,
		"PARSE_FAIL":            4,
		"INTEGRITY_FAIL":        5,
		"INSTALL_IN_PROGRESS":   6,
		"UNEXPECTED_SWITCHOVER": 7,
		"EMPTY_FIRMWARE_BANK":   8,
	}
)

func (x InstallError_Type) Enum() *InstallError_Type {
	p := new(InstallError_Type)
	*p = x
	return p
}

func (x InstallError_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstallError_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_enumTypes[2].Descriptor()
}

func (InstallError_Type) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_enumTypes[2]
}

func (x InstallError_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstallError_Type.Descriptor instead.
func (InstallError_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{19, 0}
}

type TransferRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*TransferRequest_TransferToDevice
	//	*TransferRequest_TransferToTransceiver
	Request       isTransferRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{0}
}

func (x *TransferRequest) GetRequest() isTransferRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *TransferRequest) GetTransferToDevice() *TransferToDeviceRequest {
	if x != nil {
		if x, ok := x.Request.(*TransferRequest_TransferToDevice); ok {
			return x.TransferToDevice
		}
	}
	return nil
}

func (x *TransferRequest) GetTransferToTransceiver() *TransferToTransceiverRequest {
	if x != nil {
		if x, ok := x.Request.(*TransferRequest_TransferToTransceiver); ok {
			return x.TransferToTransceiver
		}
	}
	return nil
}

type isTransferRequest_Request interface {
	isTransferRequest_Request()
}

type TransferRequest_TransferToDevice struct {
	TransferToDevice *TransferToDeviceRequest `protobuf:"bytes,1,opt,name=transfer_to_device,json=transferToDevice,proto3,oneof"`
}

type TransferRequest_TransferToTransceiver struct {
	TransferToTransceiver *TransferToTransceiverRequest `protobuf:"bytes,2,opt,name=transfer_to_transceiver,json=transferToTransceiver,proto3,oneof"`
}

func (*TransferRequest_TransferToDevice) isTransferRequest_Request() {}

func (*TransferRequest_TransferToTransceiver) isTransferRequest_Request() {}

type TransferToDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*TransferToDeviceRequest_TransferStartRequest
	//	*TransferToDeviceRequest_TransferContent
	//	*TransferToDeviceRequest_TransferEnd
	Request       isTransferToDeviceRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferToDeviceRequest) Reset() {
	*x = TransferToDeviceRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferToDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferToDeviceRequest) ProtoMessage() {}

func (x *TransferToDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferToDeviceRequest.ProtoReflect.Descriptor instead.
func (*TransferToDeviceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{1}
}

func (x *TransferToDeviceRequest) GetRequest() isTransferToDeviceRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *TransferToDeviceRequest) GetTransferStartRequest() *TransferToDeviceStartRequest {
	if x != nil {
		if x, ok := x.Request.(*TransferToDeviceRequest_TransferStartRequest); ok {
			return x.TransferStartRequest
		}
	}
	return nil
}

func (x *TransferToDeviceRequest) GetTransferContent() []byte {
	if x != nil {
		if x, ok := x.Request.(*TransferToDeviceRequest_TransferContent); ok {
			return x.TransferContent
		}
	}
	return nil
}

func (x *TransferToDeviceRequest) GetTransferEnd() *TransferEnd {
	if x != nil {
		if x, ok := x.Request.(*TransferToDeviceRequest_TransferEnd); ok {
			return x.TransferEnd
		}
	}
	return nil
}

type isTransferToDeviceRequest_Request interface {
	isTransferToDeviceRequest_Request()
}

type TransferToDeviceRequest_TransferStartRequest struct {
	TransferStartRequest *TransferToDeviceStartRequest `protobuf:"bytes,1,opt,name=transfer_start_request,json=transferStartRequest,proto3,oneof"`
}

type TransferToDeviceRequest_TransferContent struct {
	TransferContent []byte `protobuf:"bytes,2,opt,name=transfer_content,json=transferContent,proto3,oneof"`
}

type TransferToDeviceRequest_TransferEnd struct {
	TransferEnd *TransferEnd `protobuf:"bytes,3,opt,name=transfer_end,json=transferEnd,proto3,oneof"`
}

func (*TransferToDeviceRequest_TransferStartRequest) isTransferToDeviceRequest_Request() {}

func (*TransferToDeviceRequest_TransferContent) isTransferToDeviceRequest_Request() {}

func (*TransferToDeviceRequest_TransferEnd) isTransferToDeviceRequest_Request() {}

type TransferToDeviceStartRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PackageName      string                 `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageSizeBytes uint64                 `protobuf:"varint,2,opt,name=package_size_bytes,json=packageSizeBytes,proto3" json:"package_size_bytes,omitempty"`
	Hash             *types.HashType        `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransferToDeviceStartRequest) Reset() {
	*x = TransferToDeviceStartRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferToDeviceStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferToDeviceStartRequest) ProtoMessage() {}

func (x *TransferToDeviceStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferToDeviceStartRequest.ProtoReflect.Descriptor instead.
func (*TransferToDeviceStartRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{2}
}

func (x *TransferToDeviceStartRequest) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *TransferToDeviceStartRequest) GetPackageSizeBytes() uint64 {
	if x != nil {
		return x.PackageSizeBytes
	}
	return 0
}

func (x *TransferToDeviceStartRequest) GetHash() *types.HashType {
	if x != nil {
		return x.Hash
	}
	return nil
}

type TransferEnd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferEnd) Reset() {
	*x = TransferEnd{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferEnd) ProtoMessage() {}

func (x *TransferEnd) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferEnd.ProtoReflect.Descriptor instead.
func (*TransferEnd) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{3}
}

type TransferToTransceiverRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Transceiver      *types.Path            `protobuf:"bytes,1,opt,name=transceiver,proto3" json:"transceiver,omitempty"`
	PackageName      string                 `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageSizeBytes uint64                 `protobuf:"varint,3,opt,name=package_size_bytes,json=packageSizeBytes,proto3" json:"package_size_bytes,omitempty"`
	FirmwareBank     uint32                 `protobuf:"varint,4,opt,name=firmware_bank,json=firmwareBank,proto3" json:"firmware_bank,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransferToTransceiverRequest) Reset() {
	*x = TransferToTransceiverRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferToTransceiverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferToTransceiverRequest) ProtoMessage() {}

func (x *TransferToTransceiverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferToTransceiverRequest.ProtoReflect.Descriptor instead.
func (*TransferToTransceiverRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{4}
}

func (x *TransferToTransceiverRequest) GetTransceiver() *types.Path {
	if x != nil {
		return x.Transceiver
	}
	return nil
}

func (x *TransferToTransceiverRequest) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *TransferToTransceiverRequest) GetPackageSizeBytes() uint64 {
	if x != nil {
		return x.PackageSizeBytes
	}
	return 0
}

func (x *TransferToTransceiverRequest) GetFirmwareBank() uint32 {
	if x != nil {
		return x.FirmwareBank
	}
	return 0
}

type TransferResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*TransferResponse_TransferReady
	//	*TransferResponse_TransferProgress
	//	*TransferResponse_Validated
	//	*TransferResponse_TransferError
	Response      isTransferResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{5}
}

func (x *TransferResponse) GetResponse() isTransferResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *TransferResponse) GetTransferReady() *TransferReady {
	if x != nil {
		if x, ok := x.Response.(*TransferResponse_TransferReady); ok {
			return x.TransferReady
		}
	}
	return nil
}

func (x *TransferResponse) GetTransferProgress() *TransferProgress {
	if x != nil {
		if x, ok := x.Response.(*TransferResponse_TransferProgress); ok {
			return x.TransferProgress
		}
	}
	return nil
}

func (x *TransferResponse) GetValidated() *Validated {
	if x != nil {
		if x, ok := x.Response.(*TransferResponse_Validated); ok {
			return x.Validated
		}
	}
	return nil
}

func (x *TransferResponse) GetTransferError() *TransferError {
	if x != nil {
		if x, ok := x.Response.(*TransferResponse_TransferError); ok {
			return x.TransferError
		}
	}
	return nil
}

type isTransferResponse_Response interface {
	isTransferResponse_Response()
}

type TransferResponse_TransferReady struct {
	TransferReady *TransferReady `protobuf:"bytes,1,opt,name=transfer_ready,json=transferReady,proto3,oneof"`
}

type TransferResponse_TransferProgress struct {
	TransferProgress *TransferProgress `protobuf:"bytes,2,opt,name=transfer_progress,json=transferProgress,proto3,oneof"`
}

type TransferResponse_Validated struct {
	Validated *Validated `protobuf:"bytes,3,opt,name=validated,proto3,oneof"`
}

type TransferResponse_TransferError struct {
	TransferError *TransferError `protobuf:"bytes,4,opt,name=transfer_error,json=transferError,proto3,oneof"`
}

func (*TransferResponse_TransferReady) isTransferResponse_Response() {}

func (*TransferResponse_TransferProgress) isTransferResponse_Response() {}

func (*TransferResponse_Validated) isTransferResponse_Response() {}

func (*TransferResponse_TransferError) isTransferResponse_Response() {}

type TransferReady struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferReady) Reset() {
	*x = TransferReady{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferReady) ProtoMessage() {}

func (x *TransferReady) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferReady.ProtoReflect.Descriptor instead.
func (*TransferReady) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{6}
}

type TransferProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BytesReceived uint64                 `protobuf:"varint,1,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferProgress) Reset() {
	*x = TransferProgress{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferProgress) ProtoMessage() {}

func (x *TransferProgress) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferProgress.ProtoReflect.Descriptor instead.
func (*TransferProgress) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{7}
}

func (x *TransferProgress) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

type Validated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Validated) Reset() {
	*x = Validated{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Validated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validated) ProtoMessage() {}

func (x *Validated) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validated.ProtoReflect.Descriptor instead.
func (*Validated) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{8}
}

type TransferError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          TransferError_Type     `protobuf:"varint,1,opt,name=type,proto3,enum=gnoi.transceiver_firmware_install.TransferError_Type" json:"type,omitempty"`
	Detail        string                 `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferError) Reset() {
	*x = TransferError{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferError) ProtoMessage() {}

func (x *TransferError) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferError.ProtoReflect.Descriptor instead.
func (*TransferError) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{9}
}

func (x *TransferError) GetType() TransferError_Type {
	if x != nil {
		return x.Type
	}
	return TransferError_UNSPECIFIED
}

func (x *TransferError) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type InstallRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	InstallRequests []*InstallSingleRequest `protobuf:"bytes,1,rep,name=install_requests,json=installRequests,proto3" json:"install_requests,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InstallRequest) Reset() {
	*x = InstallRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallRequest) ProtoMessage() {}

func (x *InstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallRequest.ProtoReflect.Descriptor instead.
func (*InstallRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{10}
}

func (x *InstallRequest) GetInstallRequests() []*InstallSingleRequest {
	if x != nil {
		return x.InstallRequests
	}
	return nil
}

type InstallSingleRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Transceiver *types.Path            `protobuf:"bytes,1,opt,name=transceiver,proto3" json:"transceiver,omitempty"`
	// Types that are valid to be assigned to InstallFrom:
	//
	//	*InstallSingleRequest_InstallFromDevice
	//	*InstallSingleRequest_InstallFromTransceiverBank
	InstallFrom   isInstallSingleRequest_InstallFrom `protobuf_oneof:"install_from"`
	ForceInstall  bool                               `protobuf:"varint,4,opt,name=force_install,json=forceInstall,proto3" json:"force_install,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallSingleRequest) Reset() {
	*x = InstallSingleRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSingleRequest) ProtoMessage() {}

func (x *InstallSingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSingleRequest.ProtoReflect.Descriptor instead.
func (*InstallSingleRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{11}
}

func (x *InstallSingleRequest) GetTransceiver() *types.Path {
	if x != nil {
		return x.Transceiver
	}
	return nil
}

func (x *InstallSingleRequest) GetInstallFrom() isInstallSingleRequest_InstallFrom {
	if x != nil {
		return x.InstallFrom
	}
	return nil
}

func (x *InstallSingleRequest) GetInstallFromDevice() *InstallFromDeviceRequest {
	if x != nil {
		if x, ok := x.InstallFrom.(*InstallSingleRequest_InstallFromDevice); ok {
			return x.InstallFromDevice
		}
	}
	return nil
}

func (x *InstallSingleRequest) GetInstallFromTransceiverBank() *InstallFromTransceiverBankRequest {
	if x != nil {
		if x, ok := x.InstallFrom.(*InstallSingleRequest_InstallFromTransceiverBank); ok {
			return x.InstallFromTransceiverBank
		}
	}
	return nil
}

func (x *InstallSingleRequest) GetForceInstall() bool {
	if x != nil {
		return x.ForceInstall
	}
	return false
}

type isInstallSingleRequest_InstallFrom interface {
	isInstallSingleRequest_InstallFrom()
}

type InstallSingleRequest_InstallFromDevice struct {
	InstallFromDevice *InstallFromDeviceRequest `protobuf:"bytes,2,opt,name=install_from_device,json=installFromDevice,proto3,oneof"`
}

type InstallSingleRequest_InstallFromTransceiverBank struct {
	InstallFromTransceiverBank *InstallFromTransceiverBankRequest `protobuf:"bytes,3,opt,name=install_from_transceiver_bank,json=installFromTransceiverBank,proto3,oneof"`
}

func (*InstallSingleRequest_InstallFromDevice) isInstallSingleRequest_InstallFrom() {}

func (*InstallSingleRequest_InstallFromTransceiverBank) isInstallSingleRequest_InstallFrom() {}

type InstallFromDeviceRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PackageName      string                 `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageSizeBytes uint64                 `protobuf:"varint,2,opt,name=package_size_bytes,json=packageSizeBytes,proto3" json:"package_size_bytes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstallFromDeviceRequest) Reset() {
	*x = InstallFromDeviceRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallFromDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallFromDeviceRequest) ProtoMessage() {}

func (x *InstallFromDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallFromDeviceRequest.ProtoReflect.Descriptor instead.
func (*InstallFromDeviceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{12}
}

func (x *InstallFromDeviceRequest) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *InstallFromDeviceRequest) GetPackageSizeBytes() uint64 {
	if x != nil {
		return x.PackageSizeBytes
	}
	return 0
}

type InstallFromTransceiverBankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirmwareBank  uint32                 `protobuf:"varint,4,opt,name=firmware_bank,json=firmwareBank,proto3" json:"firmware_bank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallFromTransceiverBankRequest) Reset() {
	*x = InstallFromTransceiverBankRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallFromTransceiverBankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallFromTransceiverBankRequest) ProtoMessage() {}

func (x *InstallFromTransceiverBankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallFromTransceiverBankRequest.ProtoReflect.Descriptor instead.
func (*InstallFromTransceiverBankRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{13}
}

func (x *InstallFromTransceiverBankRequest) GetFirmwareBank() uint32 {
	if x != nil {
		return x.FirmwareBank
	}
	return 0
}

type InstallResponse struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	InstallResponses []*InstallSingleResponse `protobuf:"bytes,1,rep,name=install_responses,json=installResponses,proto3" json:"install_responses,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstallResponse) Reset() {
	*x = InstallResponse{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallResponse) ProtoMessage() {}

func (x *InstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallResponse.ProtoReflect.Descriptor instead.
func (*InstallResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{14}
}

func (x *InstallResponse) GetInstallResponses() []*InstallSingleResponse {
	if x != nil {
		return x.InstallResponses
	}
	return nil
}

type InstallSingleResponse struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Transceiver *types.Path            `protobuf:"bytes,1,opt,name=transceiver,proto3" json:"transceiver,omitempty"`
	// Types that are valid to be assigned to Response:
	//
	//	*InstallSingleResponse_InstallReady
	//	*InstallSingleResponse_TransferProgress
	//	*InstallSingleResponse_InstallProgress
	//	*InstallSingleResponse_InstallOk
	//	*InstallSingleResponse_InstallError
	Response      isInstallSingleResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallSingleResponse) Reset() {
	*x = InstallSingleResponse{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSingleResponse) ProtoMessage() {}

func (x *InstallSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSingleResponse.ProtoReflect.Descriptor instead.
func (*InstallSingleResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{15}
}

func (x *InstallSingleResponse) GetTransceiver() *types.Path {
	if x != nil {
		return x.Transceiver
	}
	return nil
}

func (x *InstallSingleResponse) GetResponse() isInstallSingleResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *InstallSingleResponse) GetInstallReady() *InstallReady {
	if x != nil {
		if x, ok := x.Response.(*InstallSingleResponse_InstallReady); ok {
			return x.InstallReady
		}
	}
	return nil
}

func (x *InstallSingleResponse) GetTransferProgress() *TransferProgress {
	if x != nil {
		if x, ok := x.Response.(*InstallSingleResponse_TransferProgress); ok {
			return x.TransferProgress
		}
	}
	return nil
}

func (x *InstallSingleResponse) GetInstallProgress() *InstallProgress {
	if x != nil {
		if x, ok := x.Response.(*InstallSingleResponse_InstallProgress); ok {
			return x.InstallProgress
		}
	}
	return nil
}

func (x *InstallSingleResponse) GetInstallOk() *InstallOK {
	if x != nil {
		if x, ok := x.Response.(*InstallSingleResponse_InstallOk); ok {
			return x.InstallOk
		}
	}
	return nil
}

func (x *InstallSingleResponse) GetInstallError() *InstallError {
	if x != nil {
		if x, ok := x.Response.(*InstallSingleResponse_InstallError); ok {
			return x.InstallError
		}
	}
	return nil
}

type isInstallSingleResponse_Response interface {
	isInstallSingleResponse_Response()
}

type InstallSingleResponse_InstallReady struct {
	InstallReady *InstallReady `protobuf:"bytes,2,opt,name=install_ready,json=installReady,proto3,oneof"`
}

type InstallSingleResponse_TransferProgress struct {
	TransferProgress *TransferProgress `protobuf:"bytes,3,opt,name=transfer_progress,json=transferProgress,proto3,oneof"`
}

type InstallSingleResponse_InstallProgress struct {
	InstallProgress *InstallProgress `protobuf:"bytes,4,opt,name=install_progress,json=installProgress,proto3,oneof"`
}

type InstallSingleResponse_InstallOk struct {
	InstallOk *InstallOK `protobuf:"bytes,5,opt,name=install_ok,json=installOk,proto3,oneof"`
}

type InstallSingleResponse_InstallError struct {
	InstallError *InstallError `protobuf:"bytes,6,opt,name=install_error,json=installError,proto3,oneof"`
}

func (*InstallSingleResponse_InstallReady) isInstallSingleResponse_Response() {}

func (*InstallSingleResponse_TransferProgress) isInstallSingleResponse_Response() {}

func (*InstallSingleResponse_InstallProgress) isInstallSingleResponse_Response() {}

func (*InstallSingleResponse_InstallOk) isInstallSingleResponse_Response() {}

func (*InstallSingleResponse_InstallError) isInstallSingleResponse_Response() {}

type InstallReady struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallReady) Reset() {
	*x = InstallReady{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallReady) ProtoMessage() {}

func (x *InstallReady) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallReady.ProtoReflect.Descriptor instead.
func (*InstallReady) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{16}
}

type InstallProgress struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PercentageInstalled uint32                 `protobuf:"varint,1,opt,name=percentage_installed,json=percentageInstalled,proto3" json:"percentage_installed,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *InstallProgress) Reset() {
	*x = InstallProgress{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallProgress) ProtoMessage() {}

func (x *InstallProgress) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallProgress.ProtoReflect.Descriptor instead.
func (*InstallProgress) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{17}
}

func (x *InstallProgress) GetPercentageInstalled() uint32 {
	if x != nil {
		return x.PercentageInstalled
	}
	return 0
}

type InstallOK struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallOK) Reset() {
	*x = InstallOK{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallOK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallOK) ProtoMessage() {}

func (x *InstallOK) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallOK.ProtoReflect.Descriptor instead.
func (*InstallOK) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{18}
}

type InstallError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          InstallError_Type      `protobuf:"varint,1,opt,name=type,proto3,enum=gnoi.transceiver_firmware_install.InstallError_Type" json:"type,omitempty"`
	Detail        string                 `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallError) Reset() {
	*x = InstallError{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallError) ProtoMessage() {}

func (x *InstallError) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallError.ProtoReflect.Descriptor instead.
func (*InstallError) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{19}
}

func (x *InstallError) GetType() InstallError_Type {
	if x != nil {
		return x.Type
	}
	return InstallError_UNSPECIFIED
}

func (x *InstallError) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type VerifyRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	VerifyRequests []*VerifySingleRequest `protobuf:"bytes,1,rep,name=verify_requests,json=verifyRequests,proto3" json:"verify_requests,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{20}
}

func (x *VerifyRequest) GetVerifyRequests() []*VerifySingleRequest {
	if x != nil {
		return x.VerifyRequests
	}
	return nil
}

type VerifySingleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transceiver   *types.Path            `protobuf:"bytes,1,opt,name=transceiver,proto3" json:"transceiver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifySingleRequest) Reset() {
	*x = VerifySingleRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifySingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySingleRequest) ProtoMessage() {}

func (x *VerifySingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySingleRequest.ProtoReflect.Descriptor instead.
func (*VerifySingleRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{21}
}

func (x *VerifySingleRequest) GetTransceiver() *types.Path {
	if x != nil {
		return x.Transceiver
	}
	return nil
}

type VerifyResponse struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	VerifyResponses []*VerifySingleResponse `protobuf:"bytes,1,rep,name=verify_responses,json=verifyResponses,proto3" json:"verify_responses,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{22}
}

func (x *VerifyResponse) GetVerifyResponses() []*VerifySingleResponse {
	if x != nil {
		return x.VerifyResponses
	}
	return nil
}

type VerifySingleResponse struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Transceiver                *types.Path            `protobuf:"bytes,1,opt,name=transceiver,proto3" json:"transceiver,omitempty"`
	RunningVersion             string                 `protobuf:"bytes,2,opt,name=running_version,json=runningVersion,proto3" json:"running_version,omitempty"`
	NewVersion                 string                 `protobuf:"bytes,3,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
	Bank                       []*FirmwareBank        `protobuf:"bytes,4,rep,name=bank,proto3" json:"bank,omitempty"`
	NewVersionServiceImpacting bool                   `protobuf:"varint,5,opt,name=new_version_service_impacting,json=newVersionServiceImpacting,proto3" json:"new_version_service_impacting,omitempty"`
	InstallStatus              InstallStatus          `protobuf:"varint,6,opt,name=install_status,json=installStatus,proto3,enum=gnoi.transceiver_firmware_install.InstallStatus" json:"install_status,omitempty"`
	Step                       string                 `protobuf:"bytes,7,opt,name=step,proto3" json:"step,omitempty"`
	StepPercentComplete        uint32                 `protobuf:"varint,8,opt,name=step_percent_complete,json=stepPercentComplete,proto3" json:"step_percent_complete,omitempty"`
	TotalPercentComplete       uint32                 `protobuf:"varint,9,opt,name=total_percent_complete,json=totalPercentComplete,proto3" json:"total_percent_complete,omitempty"`
	StartTime                  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime                   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	Duration                   *durationpb.Duration   `protobuf:"bytes,12,opt,name=duration,proto3" json:"duration,omitempty"`
	FailureMessage             string                 `protobuf:"bytes,13,opt,name=failure_message,json=failureMessage,proto3" json:"failure_message,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *VerifySingleResponse) Reset() {
	*x = VerifySingleResponse{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifySingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySingleResponse) ProtoMessage() {}

func (x *VerifySingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySingleResponse.ProtoReflect.Descriptor instead.
func (*VerifySingleResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{23}
}

func (x *VerifySingleResponse) GetTransceiver() *types.Path {
	if x != nil {
		return x.Transceiver
	}
	return nil
}

func (x *VerifySingleResponse) GetRunningVersion() string {
	if x != nil {
		return x.RunningVersion
	}
	return ""
}

func (x *VerifySingleResponse) GetNewVersion() string {
	if x != nil {
		return x.NewVersion
	}
	return ""
}

func (x *VerifySingleResponse) GetBank() []*FirmwareBank {
	if x != nil {
		return x.Bank
	}
	return nil
}

func (x *VerifySingleResponse) GetNewVersionServiceImpacting() bool {
	if x != nil {
		return x.NewVersionServiceImpacting
	}
	return false
}

func (x *VerifySingleResponse) GetInstallStatus() InstallStatus {
	if x != nil {
		return x.InstallStatus
	}
	return InstallStatus_INSTALL_STATUS_UNKNOWN
}

func (x *VerifySingleResponse) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *VerifySingleResponse) GetStepPercentComplete() uint32 {
	if x != nil {
		return x.StepPercentComplete
	}
	return 0
}

func (x *VerifySingleResponse) GetTotalPercentComplete() uint32 {
	if x != nil {
		return x.TotalPercentComplete
	}
	return 0
}

func (x *VerifySingleResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *VerifySingleResponse) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *VerifySingleResponse) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *VerifySingleResponse) GetFailureMessage() string {
	if x != nil {
		return x.FailureMessage
	}
	return ""
}

type FirmwareBank struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bank          string                 `protobuf:"bytes,1,opt,name=bank,proto3" json:"bank,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirmwareBank) Reset() {
	*x = FirmwareBank{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirmwareBank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareBank) ProtoMessage() {}

func (x *FirmwareBank) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareBank.ProtoReflect.Descriptor instead.
func (*FirmwareBank) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{24}
}

func (x *FirmwareBank) GetBank() string {
	if x != nil {
		return x.Bank
	}
	return ""
}

func (x *FirmwareBank) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PackageName   string                 `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteRequest) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP(), []int{26}
}

var File_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto protoreflect.FileDescriptor

const file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDesc = "" +
	"\n" +
	"Zgithub.com/openconfig/gnoi/transceiver_firmware_install/transceiver_firmware_install.proto\x12!gnoi.transceiver_firmware_install\x1a,github.com/openconfig/gnoi/types/types.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x83\x02\n" +
	"\x0fTransferRequest\x12j\n" +
	"\x12transfer_to_device\x18\x01 \x01(\v2:.gnoi.transceiver_firmware_install.TransferToDeviceRequestH\x00R\x10transferToDevice\x12y\n" +
	"\x17transfer_to_transceiver\x18\x02 \x01(\v2?.gnoi.transceiver_firmware_install.TransferToTransceiverRequestH\x00R\x15transferToTransceiverB\t\n" +
	"\arequest\"\x9f\x02\n" +
	"\x17TransferToDeviceRequest\x12w\n" +
	"\x16transfer_start_request\x18\x01 \x01(\v2?.gnoi.transceiver_firmware_install.TransferToDeviceStartRequestH\x00R\x14transferStartRequest\x12+\n" +
	"\x10transfer_content\x18\x02 \x01(\fH\x00R\x0ftransferContent\x12S\n" +
	"\ftransfer_end\x18\x03 \x01(\v2..gnoi.transceiver_firmware_install.TransferEndH\x00R\vtransferEndB\t\n" +
	"\arequest\"\x99\x01\n" +
	"\x1cTransferToDeviceStartRequest\x12!\n" +
	"\fpackage_name\x18\x01 \x01(\tR\vpackageName\x12,\n" +
	"\x12package_size_bytes\x18\x02 \x01(\x04R\x10packageSizeBytes\x12(\n" +
	"\x04hash\x18\x03 \x01(\v2\x14.gnoi.types.HashTypeR\x04hash\"\r\n" +
	"\vTransferEnd\"\xc8\x01\n" +
	"\x1cTransferToTransceiverRequest\x122\n" +
	"\vtransceiver\x18\x01 \x01(\v2\x10.gnoi.types.PathR\vtransceiver\x12!\n" +
	"\fpackage_name\x18\x02 \x01(\tR\vpackageName\x12,\n" +
	"\x12package_size_bytes\x18\x03 \x01(\x04R\x10packageSizeBytes\x12#\n" +
	"\rfirmware_bank\x18\x04 \x01(\rR\ffirmwareBank\"\x86\x03\n" +
	"\x10TransferResponse\x12Y\n" +
	"\x0etransfer_ready\x18\x01 \x01(\v20.gnoi.transceiver_firmware_install.TransferReadyH\x00R\rtransferReady\x12b\n" +
	"\x11transfer_progress\x18\x02 \x01(\v23.gnoi.transceiver_firmware_install.TransferProgressH\x00R\x10transferProgress\x12L\n" +
	"\tvalidated\x18\x03 \x01(\v2,.gnoi.transceiver_firmware_install.ValidatedH\x00R\tvalidated\x12Y\n" +
	"\x0etransfer_error\x18\x04 \x01(\v20.gnoi.transceiver_firmware_install.TransferErrorH\x00R\rtransferErrorB\n" +
	"\n" +
	"\bresponse\"\x0f\n" +
	"\rTransferReady\"9\n" +
	"\x10TransferProgress\x12%\n" +
	"\x0ebytes_received\x18\x01 \x01(\x04R\rbytesReceived\"\v\n" +
	"\tValidated\"\x81\x02\n" +
	"\rTransferError\x12I\n" +
	"\x04type\x18\x01 \x01(\x0e25.gnoi.transceiver_firmware_install.TransferError.TypeR\x04type\x12\x16\n" +
	"\x06detail\x18\x02 \x01(\tR\x06detail\"\x8c\x01\n" +
	"\x04Type\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x10\n" +
	"\fINCOMPATIBLE\x10\x01\x12\r\n" +
	"\tTOO_LARGE\x10\x02\x12\x0e\n" +
	"\n" +
	"PARSE_FAIL\x10\x03\x12\x12\n" +
	"\x0eINTEGRITY_FAIL\x10\x04\x12\x18\n" +
	"\x14TRANSFER_IN_PROGRESS\x10\x05\x12\x14\n" +
	"\x10INVALID_ARGUMENT\x10\x06\"t\n" +
	"\x0eInstallRequest\x12b\n" +
	"\x10install_requests\x18\x01 \x03(\v27.gnoi.transceiver_firmware_install.InstallSingleRequestR\x0finstallRequests\"\xfa\x02\n" +
	"\x14InstallSingleRequest\x122\n" +
	"\vtransceiver\x18\x01 \x01(\v2\x10.gnoi.types.PathR\vtransceiver\x12m\n" +
	"\x13install_from_device\x18\x02 \x01(\v2;.gnoi.transceiver_firmware_install.InstallFromDeviceRequestH\x00R\x11installFromDevice\x12\x89\x01\n" +
	"\x1dinstall_from_transceiver_bank\x18\x03 \x01(\v2D.gnoi.transceiver_firmware_install.InstallFromTransceiverBankRequestH\x00R\x1ainstallFromTransceiverBank\x12#\n" +
	"\rforce_install\x18\x04 \x01(\bR\fforceInstallB\x0e\n" +
	"\finstall_from\"k\n" +
	"\x18InstallFromDeviceRequest\x12!\n" +
	"\fpackage_name\x18\x01 \x01(\tR\vpackageName\x12,\n" +
	"\x12package_size_bytes\x18\x02 \x01(\x04R\x10packageSizeBytes\"H\n" +
	"!InstallFromTransceiverBankRequest\x12#\n" +
	"\rfirmware_bank\x18\x04 \x01(\rR\ffirmwareBank\"x\n" +
	"\x0fInstallResponse\x12e\n" +
	"\x11install_responses\x18\x01 \x03(\v28.gnoi.transceiver_firmware_install.InstallSingleResponseR\x10installResponses\"\x9b\x04\n" +
	"\x15InstallSingleResponse\x122\n" +
	"\vtransceiver\x18\x01 \x01(\v2\x10.gnoi.types.PathR\vtransceiver\x12V\n" +
	"\rinstall_ready\x18\x02 \x01(\v2/.gnoi.transceiver_firmware_install.InstallReadyH\x00R\finstallReady\x12b\n" +
	"\x11transfer_progress\x18\x03 \x01(\v23.gnoi.transceiver_firmware_install.TransferProgressH\x00R\x10transferProgress\x12_\n" +
	"\x10install_progress\x18\x04 \x01(\v22.gnoi.transceiver_firmware_install.InstallProgressH\x00R\x0finstallProgress\x12M\n" +
	"\n" +
	"install_ok\x18\x05 \x01(\v2,.gnoi.transceiver_firmware_install.InstallOKH\x00R\tinstallOk\x12V\n" +
	"\rinstall_error\x18\x06 \x01(\v2/.gnoi.transceiver_firmware_install.InstallErrorH\x00R\finstallErrorB\n" +
	"\n" +
	"\bresponse\"\x0e\n" +
	"\fInstallReady\"D\n" +
	"\x0fInstallProgress\x121\n" +
	"\x14percentage_installed\x18\x01 \x01(\rR\x13percentageInstalled\"\v\n" +
	"\tInstallOK\"\xb6\x02\n" +
	"\fInstallError\x12H\n" +
	"\x04type\x18\x01 \x01(\x0e24.gnoi.transceiver_firmware_install.InstallError.TypeR\x04type\x12\x16\n" +
	"\x06detail\x18\x02 \x01(\tR\x06detail\"\xc3\x01\n" +
	"\x04Type\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14NON_EXISTENT_VERSION\x10\x01\x12\x10\n" +
	"\fINCOMPATIBLE\x10\x02\x12\r\n" +
	"\tTOO_LARGE\x10\x03\x12\x0e\n" +
	"\n" +
	"PARSE_FAIL\x10\x04\x12\x12\n" +
	"\x0eINTEGRITY_FAIL\x10\x05\x12\x17\n" +
	"\x13INSTALL_IN_PROGRESS\x10\x06\x12\x19\n" +
	"\x15UNEXPECTED_SWITCHOVER\x10\a\x12\x17\n" +
	"\x13EMPTY_FIRMWARE_BANK\x10\b\"p\n" +
	"\rVerifyRequest\x12_\n" +
	"\x0fverify_requests\x18\x01 \x03(\v26.gnoi.transceiver_firmware_install.VerifySingleRequestR\x0everifyRequests\"I\n" +
	"\x13VerifySingleRequest\x122\n" +
	"\vtransceiver\x18\x01 \x01(\v2\x10.gnoi.types.PathR\vtransceiver\"t\n" +
	"\x0eVerifyResponse\x12b\n" +
	"\x10verify_responses\x18\x01 \x03(\v27.gnoi.transceiver_firmware_install.VerifySingleResponseR\x0fverifyResponses\"\xc7\x05\n" +
	"\x14VerifySingleResponse\x122\n" +
	"\vtransceiver\x18\x01 \x01(\v2\x10.gnoi.types.PathR\vtransceiver\x12'\n" +
	"\x0frunning_version\x18\x02 \x01(\tR\x0erunningVersion\x12\x1f\n" +
	"\vnew_version\x18\x03 \x01(\tR\n" +
	"newVersion\x12C\n" +
	"\x04bank\x18\x04 \x03(\v2/.gnoi.transceiver_firmware_install.FirmwareBankR\x04bank\x12A\n" +
	"\x1dnew_version_service_impacting\x18\x05 \x01(\bR\x1anewVersionServiceImpacting\x12W\n" +
	"\x0einstall_status\x18\x06 \x01(\x0e20.gnoi.transceiver_firmware_install.InstallStatusR\rinstallStatus\x12\x12\n" +
	"\x04step\x18\a \x01(\tR\x04step\x122\n" +
	"\x15step_percent_complete\x18\b \x01(\rR\x13stepPercentComplete\x124\n" +
	"\x16total_percent_complete\x18\t \x01(\rR\x14totalPercentComplete\x129\n" +
	"\n" +
	"start_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x127\n" +
	"\tstop_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\bstopTime\x125\n" +
	"\bduration\x18\f \x01(\v2\x19.google.protobuf.DurationR\bduration\x12'\n" +
	"\x0ffailure_message\x18\r \x01(\tR\x0efailureMessage\"<\n" +
	"\fFirmwareBank\x12\x12\n" +
	"\x04bank\x18\x01 \x01(\tR\x04bank\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"2\n" +
	"\rDeleteRequest\x12!\n" +
	"\fpackage_name\x18\x01 \x01(\tR\vpackageName\"\x10\n" +
	"\x0eDeleteResponse*\xb5\x01\n" +
	"\rInstallStatus\x12\x1a\n" +
	"\x16INSTALL_STATUS_UNKNOWN\x10\x00\x12'\n" +
	"#INSTALL_STATUS_TRANSFER_IN_PROGRESS\x10\x01\x12&\n" +
	"\"INSTALL_STATUS_INSTALL_IN_PROGRESS\x10\x02\x12\x1c\n" +
	"\x18INSTALL_STATUS_COMPLETED\x10\x03\x12\x19\n" +
	"\x15INSTALL_STATUS_FAILED\x10\x042\xe7\x03\n" +
	"\x1aTransceiverFirmwareInstall\x12w\n" +
	"\bTransfer\x122.gnoi.transceiver_firmware_install.TransferRequest\x1a3.gnoi.transceiver_firmware_install.TransferResponse(\x010\x01\x12r\n" +
	"\aInstall\x121.gnoi.transceiver_firmware_install.InstallRequest\x1a2.gnoi.transceiver_firmware_install.InstallResponse0\x01\x12m\n" +
	"\x06Verify\x120.gnoi.transceiver_firmware_install.VerifyRequest\x1a1.gnoi.transceiver_firmware_install.VerifyResponse\x12m\n" +
	"\x06Delete\x120.gnoi.transceiver_firmware_install.DeleteRequest\x1a1.gnoi.transceiver_firmware_install.DeleteResponseBA\xd2>\x050.1.0Z7github.com/openconfig/gnoi/transceiver_firmware_installb\x06proto3"

var (
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescOnce sync.Once
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescData []byte
)

func file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDesc), len(file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDesc)))
	})
	return file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDescData
}

var file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_goTypes = []any{
	(InstallStatus)(0),                        // 0: gnoi.transceiver_firmware_install.InstallStatus
	(TransferError_Type)(0),                   // 1: gnoi.transceiver_firmware_install.TransferError.Type
	(InstallError_Type)(0),                    // 2: gnoi.transceiver_firmware_install.InstallError.Type
	(*TransferRequest)(nil),                   // 3: gnoi.transceiver_firmware_install.TransferRequest
	(*TransferToDeviceRequest)(nil),           // 4: gnoi.transceiver_firmware_install.TransferToDeviceRequest
	(*TransferToDeviceStartRequest)(nil),      // 5: gnoi.transceiver_firmware_install.TransferToDeviceStartRequest
	(*TransferEnd)(nil),                       // 6: gnoi.transceiver_firmware_install.TransferEnd
	(*TransferToTransceiverRequest)(nil),      // 7: gnoi.transceiver_firmware_install.TransferToTransceiverRequest
	(*TransferResponse)(nil),                  // 8: gnoi.transceiver_firmware_install.TransferResponse
	(*TransferReady)(nil),                     // 9: gnoi.transceiver_firmware_install.TransferReady
	(*TransferProgress)(nil),                  // 10: gnoi.transceiver_firmware_install.TransferProgress
	(*Validated)(nil),                         // 11: gnoi.transceiver_firmware_install.Validated
	(*TransferError)(nil),                     // 12: gnoi.transceiver_firmware_install.TransferError
	(*InstallRequest)(nil),                    // 13: gnoi.transceiver_firmware_install.InstallRequest
	(*InstallSingleRequest)(nil),              // 14: gnoi.transceiver_firmware_install.InstallSingleRequest
	(*InstallFromDeviceRequest)(nil),          // 15: gnoi.transceiver_firmware_install.InstallFromDeviceRequest
	(*InstallFromTransceiverBankRequest)(nil), // 16: gnoi.transceiver_firmware_install.InstallFromTransceiverBankRequest
	(*InstallResponse)(nil),                   // 17: gnoi.transceiver_firmware_install.InstallResponse
	(*InstallSingleResponse)(nil),             // 18: gnoi.transceiver_firmware_install.InstallSingleResponse
	(*InstallReady)(nil),                      // 19: gnoi.transceiver_firmware_install.InstallReady
	(*InstallProgress)(nil),                   // 20: gnoi.transceiver_firmware_install.InstallProgress
	(*InstallOK)(nil),                         // 21: gnoi.transceiver_firmware_install.InstallOK
	(*InstallError)(nil),                      // 22: gnoi.transceiver_firmware_install.InstallError
	(*VerifyRequest)(nil),                     // 23: gnoi.transceiver_firmware_install.VerifyRequest
	(*VerifySingleRequest)(nil),               // 24: gnoi.transceiver_firmware_install.VerifySingleRequest
	(*VerifyResponse)(nil),                    // 25: gnoi.transceiver_firmware_install.VerifyResponse
	(*VerifySingleResponse)(nil),              // 26: gnoi.transceiver_firmware_install.VerifySingleResponse
	(*FirmwareBank)(nil),                      // 27: gnoi.transceiver_firmware_install.FirmwareBank
	(*DeleteRequest)(nil),                     // 28: gnoi.transceiver_firmware_install.DeleteRequest
	(*DeleteResponse)(nil),                    // 29: gnoi.transceiver_firmware_install.DeleteResponse
	(*types.HashType)(nil),                    // 30: gnoi.types.HashType
	(*types.Path)(nil),                        // 31: gnoi.types.Path
	(*timestamppb.Timestamp)(nil),             // 32: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),               // 33: google.protobuf.Duration
}
var file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_depIdxs = []int32{
	4,  // 0: gnoi.transceiver_firmware_install.TransferRequest.transfer_to_device:type_name -> gnoi.transceiver_firmware_install.TransferToDeviceRequest
	7,  // 1: gnoi.transceiver_firmware_install.TransferRequest.transfer_to_transceiver:type_name -> gnoi.transceiver_firmware_install.TransferToTransceiverRequest
	5,  // 2: gnoi.transceiver_firmware_install.TransferToDeviceRequest.transfer_start_request:type_name -> gnoi.transceiver_firmware_install.TransferToDeviceStartRequest
	6,  // 3: gnoi.transceiver_firmware_install.TransferToDeviceRequest.transfer_end:type_name -> gnoi.transceiver_firmware_install.TransferEnd
	30, // 4: gnoi.transceiver_firmware_install.TransferToDeviceStartRequest.hash:type_name -> gnoi.types.HashType
	31, // 5: gnoi.transceiver_firmware_install.TransferToTransceiverRequest.transceiver:type_name -> gnoi.types.Path
	9,  // 6: gnoi.transceiver_firmware_install.TransferResponse.transfer_ready:type_name -> gnoi.transceiver_firmware_install.TransferReady
	10, // 7: gnoi.transceiver_firmware_install.TransferResponse.transfer_progress:type_name -> gnoi.transceiver_firmware_install.TransferProgress
	11, // 8: gnoi.transceiver_firmware_install.TransferResponse.validated:type_name -> gnoi.transceiver_firmware_install.Validated
	12, // 9: gnoi.transceiver_firmware_install.TransferResponse.transfer_error:type_name -> gnoi.transceiver_firmware_install.TransferError
	1,  // 10: gnoi.transceiver_firmware_install.TransferError.type:type_name -> gnoi.transceiver_firmware_install.TransferError.Type
	14, // 11: gnoi.transceiver_firmware_install.InstallRequest.install_requests:type_name -> gnoi.transceiver_firmware_install.InstallSingleRequest
	31, // 12: gnoi.transceiver_firmware_install.InstallSingleRequest.transceiver:type_name -> gnoi.types.Path
	15, // 13: gnoi.transceiver_firmware_install.InstallSingleRequest.install_from_device:type_name -> gnoi.transceiver_firmware_install.InstallFromDeviceRequest
	16, // 14: gnoi.transceiver_firmware_install.InstallSingleRequest.install_from_transceiver_bank:type_name -> gnoi.transceiver_firmware_install.InstallFromTransceiverBankRequest
	18, // 15: gnoi.transceiver_firmware_install.InstallResponse.install_responses:type_name -> gnoi.transceiver_firmware_install.InstallSingleResponse
	31, // 16: gnoi.transceiver_firmware_install.InstallSingleResponse.transceiver:type_name -> gnoi.types.Path
	19, // 17: gnoi.transceiver_firmware_install.InstallSingleResponse.install_ready:type_name -> gnoi.transceiver_firmware_install.InstallReady
	10, // 18: gnoi.transceiver_firmware_install.InstallSingleResponse.transfer_progress:type_name -> gnoi.transceiver_firmware_install.TransferProgress
	20, // 19: gnoi.transceiver_firmware_install.InstallSingleResponse.install_progress:type_name -> gnoi.transceiver_firmware_install.InstallProgress
	21, // 20: gnoi.transceiver_firmware_install.InstallSingleResponse.install_ok:type_name -> gnoi.transceiver_firmware_install.InstallOK
	22, // 21: gnoi.transceiver_firmware_install.InstallSingleResponse.install_error:type_name -> gnoi.transceiver_firmware_install.InstallError
	2,  // 22: gnoi.transceiver_firmware_install.InstallError.type:type_name -> gnoi.transceiver_firmware_install.InstallError.Type
	24, // 23: gnoi.transceiver_firmware_install.VerifyRequest.verify_requests:type_name -> gnoi.transceiver_firmware_install.VerifySingleRequest
	31, // 24: gnoi.transceiver_firmware_install.VerifySingleRequest.transceiver:type_name -> gnoi.types.Path
	26, // 25: gnoi.transceiver_firmware_install.VerifyResponse.verify_responses:type_name -> gnoi.transceiver_firmware_install.VerifySingleResponse
	31, // 26: gnoi.transceiver_firmware_install.VerifySingleResponse.transceiver:type_name -> gnoi.types.Path
	27, // 27: gnoi.transceiver_firmware_install.VerifySingleResponse.bank:type_name -> gnoi.transceiver_firmware_install.FirmwareBank
	0,  // 28: gnoi.transceiver_firmware_install.VerifySingleResponse.install_status:type_name -> gnoi.transceiver_firmware_install.InstallStatus
	32, // 29: gnoi.transceiver_firmware_install.VerifySingleResponse.start_time:type_name -> google.protobuf.Timestamp
	32, // 30: gnoi.transceiver_firmware_install.VerifySingleResponse.stop_time:type_name -> google.protobuf.Timestamp
	33, // 31: gnoi.transceiver_firmware_install.VerifySingleResponse.duration:type_name -> google.protobuf.Duration
	3,  // 32: gnoi.transceiver_firmware_install.TransceiverFirmwareInstall.Transfer:input_type -> gnoi.transceiver_firmware_install.TransferRequest
	13, // 33: gnoi.transceiver_firmware_install.TransceiverFirmwareInstall.Install:input_type -> gnoi.transceiver_firmware_install.InstallRequest
	23, // 34: gnoi.transceiver_firmware_install.TransceiverFirmwareInstall.Verify:input_type -> gnoi.transceiver_firmware_install.VerifyRequest
	28, // 35: gnoi.transceiver_firmware_install.TransceiverFirmwareInstall.Delete:input_type -> gnoi.transceiver_firmware_install.DeleteRequest
	8,  // 36: gnoi.transceiver_firmware_install.TransceiverFirmwareInstall.Transfer:output_type -> gnoi.transceiver_firmware_install.TransferResponse
	17, // 37: gnoi.transceiver_firmware_install.TransceiverFirmwareInstall.Install:output_type -> gnoi.transceiver_firmware_install.InstallResponse
	25, // 38: gnoi.transceiver_firmware_install.TransceiverFirmwareInstall.Verify:output_type -> gnoi.transceiver_firmware_install.VerifyResponse
	29, // 39: gnoi.transceiver_firmware_install.TransceiverFirmwareInstall.Delete:output_type -> gnoi.transceiver_firmware_install.DeleteResponse
	36, // [36:40] is the sub-list for method output_type
	32, // [32:36] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() {
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_init()
}
func file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_init() {
	if File_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto != nil {
		return
	}
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[0].OneofWrappers = []any{
		(*TransferRequest_TransferToDevice)(nil),
		(*TransferRequest_TransferToTransceiver)(nil),
	}
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[1].OneofWrappers = []any{
		(*TransferToDeviceRequest_TransferStartRequest)(nil),
		(*TransferToDeviceRequest_TransferContent)(nil),
		(*TransferToDeviceRequest_TransferEnd)(nil),
	}
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[5].OneofWrappers = []any{
		(*TransferResponse_TransferReady)(nil),
		(*TransferResponse_TransferProgress)(nil),
		(*TransferResponse_Validated)(nil),
		(*TransferResponse_TransferError)(nil),
	}
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[11].OneofWrappers = []any{
		(*InstallSingleRequest_InstallFromDevice)(nil),
		(*InstallSingleRequest_InstallFromTransceiverBank)(nil),
	}
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes[15].OneofWrappers = []any{
		(*InstallSingleResponse_InstallReady)(nil),
		(*InstallSingleResponse_TransferProgress)(nil),
		(*InstallSingleResponse_InstallProgress)(nil),
		(*InstallSingleResponse_InstallOk)(nil),
		(*InstallSingleResponse_InstallError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDesc), len(file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto = out.File
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_goTypes = nil
	file_github_com_openconfig_gnoi_transceiver_firmware_install_transceiver_firmware_install_proto_depIdxs = nil
}
