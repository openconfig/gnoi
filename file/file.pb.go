// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: github.com/openconfig/gnoi/file/file.proto

package file

import (
	common "github.com/openconfig/gnoi/common"
	types "github.com/openconfig/gnoi/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*PutRequest_Open
	//	*PutRequest_Contents
	//	*PutRequest_Hash
	Request       isPutRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{0}
}

func (x *PutRequest) GetRequest() isPutRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *PutRequest) GetOpen() *PutRequest_Details {
	if x != nil {
		if x, ok := x.Request.(*PutRequest_Open); ok {
			return x.Open
		}
	}
	return nil
}

func (x *PutRequest) GetContents() []byte {
	if x != nil {
		if x, ok := x.Request.(*PutRequest_Contents); ok {
			return x.Contents
		}
	}
	return nil
}

func (x *PutRequest) GetHash() *types.HashType {
	if x != nil {
		if x, ok := x.Request.(*PutRequest_Hash); ok {
			return x.Hash
		}
	}
	return nil
}

type isPutRequest_Request interface {
	isPutRequest_Request()
}

type PutRequest_Open struct {
	Open *PutRequest_Details `protobuf:"bytes,1,opt,name=open,proto3,oneof"`
}

type PutRequest_Contents struct {
	Contents []byte `protobuf:"bytes,2,opt,name=contents,proto3,oneof"`
}

type PutRequest_Hash struct {
	Hash *types.HashType `protobuf:"bytes,3,opt,name=hash,proto3,oneof"`
}

func (*PutRequest_Open) isPutRequest_Request() {}

func (*PutRequest_Contents) isPutRequest_Request() {}

func (*PutRequest_Hash) isPutRequest_Request() {}

type PutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{1}
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RemoteFile    string                 `protobuf:"bytes,1,opt,name=remote_file,json=remoteFile,proto3" json:"remote_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetRemoteFile() string {
	if x != nil {
		return x.RemoteFile
	}
	return ""
}

type GetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*GetResponse_Contents
	//	*GetResponse_Hash
	Response      isGetResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponse) GetResponse() isGetResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetResponse) GetContents() []byte {
	if x != nil {
		if x, ok := x.Response.(*GetResponse_Contents); ok {
			return x.Contents
		}
	}
	return nil
}

func (x *GetResponse) GetHash() *types.HashType {
	if x != nil {
		if x, ok := x.Response.(*GetResponse_Hash); ok {
			return x.Hash
		}
	}
	return nil
}

type isGetResponse_Response interface {
	isGetResponse_Response()
}

type GetResponse_Contents struct {
	Contents []byte `protobuf:"bytes,1,opt,name=contents,proto3,oneof"`
}

type GetResponse_Hash struct {
	Hash *types.HashType `protobuf:"bytes,2,opt,name=hash,proto3,oneof"`
}

func (*GetResponse_Contents) isGetResponse_Response() {}

func (*GetResponse_Hash) isGetResponse_Response() {}

type TransferToRemoteRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LocalPath      string                 `protobuf:"bytes,1,opt,name=local_path,json=localPath,proto3" json:"local_path,omitempty"`
	RemoteDownload *common.RemoteDownload `protobuf:"bytes,2,opt,name=remote_download,json=remoteDownload,proto3" json:"remote_download,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TransferToRemoteRequest) Reset() {
	*x = TransferToRemoteRequest{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferToRemoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferToRemoteRequest) ProtoMessage() {}

func (x *TransferToRemoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferToRemoteRequest.ProtoReflect.Descriptor instead.
func (*TransferToRemoteRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{4}
}

func (x *TransferToRemoteRequest) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

func (x *TransferToRemoteRequest) GetRemoteDownload() *common.RemoteDownload {
	if x != nil {
		return x.RemoteDownload
	}
	return nil
}

type TransferToRemoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          *types.HashType        `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferToRemoteResponse) Reset() {
	*x = TransferToRemoteResponse{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferToRemoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferToRemoteResponse) ProtoMessage() {}

func (x *TransferToRemoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferToRemoteResponse.ProtoReflect.Descriptor instead.
func (*TransferToRemoteResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{5}
}

func (x *TransferToRemoteResponse) GetHash() *types.HashType {
	if x != nil {
		return x.Hash
	}
	return nil
}

type StatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{6}
}

func (x *StatRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type StatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         []*StatInfo            `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatResponse) Reset() {
	*x = StatResponse{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatResponse) ProtoMessage() {}

func (x *StatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatResponse.ProtoReflect.Descriptor instead.
func (*StatResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{7}
}

func (x *StatResponse) GetStats() []*StatInfo {
	if x != nil {
		return x.Stats
	}
	return nil
}

type StatInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	LastModified  uint64                 `protobuf:"varint,2,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	Permissions   uint32                 `protobuf:"varint,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Size          uint64                 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Umask         uint32                 `protobuf:"varint,5,opt,name=umask,proto3" json:"umask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatInfo) Reset() {
	*x = StatInfo{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatInfo) ProtoMessage() {}

func (x *StatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatInfo.ProtoReflect.Descriptor instead.
func (*StatInfo) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{8}
}

func (x *StatInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StatInfo) GetLastModified() uint64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

func (x *StatInfo) GetPermissions() uint32 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

func (x *StatInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StatInfo) GetUmask() uint32 {
	if x != nil {
		return x.Umask
	}
	return 0
}

type RemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RemoteFile    string                 `protobuf:"bytes,1,opt,name=remote_file,json=remoteFile,proto3" json:"remote_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRequest) Reset() {
	*x = RemoveRequest{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRequest) ProtoMessage() {}

func (x *RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRequest.ProtoReflect.Descriptor instead.
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveRequest) GetRemoteFile() string {
	if x != nil {
		return x.RemoteFile
	}
	return ""
}

type RemoveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveResponse) Reset() {
	*x = RemoveResponse{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResponse) ProtoMessage() {}

func (x *RemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResponse.ProtoReflect.Descriptor instead.
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{10}
}

type PutRequest_Details struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RemoteFile    string                 `protobuf:"bytes,1,opt,name=remote_file,json=remoteFile,proto3" json:"remote_file,omitempty"`
	Permissions   uint32                 `protobuf:"varint,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest_Details) Reset() {
	*x = PutRequest_Details{}
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest_Details) ProtoMessage() {}

func (x *PutRequest_Details) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnoi_file_file_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest_Details.ProtoReflect.Descriptor instead.
func (*PutRequest_Details) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PutRequest_Details) GetRemoteFile() string {
	if x != nil {
		return x.RemoteFile
	}
	return ""
}

func (x *PutRequest_Details) GetPermissions() uint32 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

var File_github_com_openconfig_gnoi_file_file_proto protoreflect.FileDescriptor

const file_github_com_openconfig_gnoi_file_file_proto_rawDesc = "" +
	"\n" +
	"*github.com/openconfig/gnoi/file/file.proto\x12\tgnoi.file\x1a.github.com/openconfig/gnoi/common/common.proto\x1a,github.com/openconfig/gnoi/types/types.proto\"\xe4\x01\n" +
	"\n" +
	"PutRequest\x123\n" +
	"\x04open\x18\x01 \x01(\v2\x1d.gnoi.file.PutRequest.DetailsH\x00R\x04open\x12\x1c\n" +
	"\bcontents\x18\x02 \x01(\fH\x00R\bcontents\x12*\n" +
	"\x04hash\x18\x03 \x01(\v2\x14.gnoi.types.HashTypeH\x00R\x04hash\x1aL\n" +
	"\aDetails\x12\x1f\n" +
	"\vremote_file\x18\x01 \x01(\tR\n" +
	"remoteFile\x12 \n" +
	"\vpermissions\x18\x02 \x01(\rR\vpermissionsB\t\n" +
	"\arequest\"\r\n" +
	"\vPutResponse\"-\n" +
	"\n" +
	"GetRequest\x12\x1f\n" +
	"\vremote_file\x18\x01 \x01(\tR\n" +
	"remoteFile\"c\n" +
	"\vGetResponse\x12\x1c\n" +
	"\bcontents\x18\x01 \x01(\fH\x00R\bcontents\x12*\n" +
	"\x04hash\x18\x02 \x01(\v2\x14.gnoi.types.HashTypeH\x00R\x04hashB\n" +
	"\n" +
	"\bresponse\"~\n" +
	"\x17TransferToRemoteRequest\x12\x1d\n" +
	"\n" +
	"local_path\x18\x01 \x01(\tR\tlocalPath\x12D\n" +
	"\x0fremote_download\x18\x02 \x01(\v2\x1b.gnoi.common.RemoteDownloadR\x0eremoteDownload\"D\n" +
	"\x18TransferToRemoteResponse\x12(\n" +
	"\x04hash\x18\x01 \x01(\v2\x14.gnoi.types.HashTypeR\x04hash\"!\n" +
	"\vStatRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"9\n" +
	"\fStatResponse\x12)\n" +
	"\x05stats\x18\x01 \x03(\v2\x13.gnoi.file.StatInfoR\x05stats\"\x8f\x01\n" +
	"\bStatInfo\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12#\n" +
	"\rlast_modified\x18\x02 \x01(\x04R\flastModified\x12 \n" +
	"\vpermissions\x18\x03 \x01(\rR\vpermissions\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x04R\x04size\x12\x14\n" +
	"\x05umask\x18\x05 \x01(\rR\x05umask\"0\n" +
	"\rRemoveRequest\x12\x1f\n" +
	"\vremote_file\x18\x01 \x01(\tR\n" +
	"remoteFile\"\x10\n" +
	"\x0eRemoveResponse2\xd5\x02\n" +
	"\x04File\x128\n" +
	"\x03Get\x12\x15.gnoi.file.GetRequest\x1a\x16.gnoi.file.GetResponse\"\x000\x01\x12]\n" +
	"\x10TransferToRemote\x12\".gnoi.file.TransferToRemoteRequest\x1a#.gnoi.file.TransferToRemoteResponse\"\x00\x128\n" +
	"\x03Put\x12\x15.gnoi.file.PutRequest\x1a\x16.gnoi.file.PutResponse\"\x00(\x01\x129\n" +
	"\x04Stat\x12\x16.gnoi.file.StatRequest\x1a\x17.gnoi.file.StatResponse\"\x00\x12?\n" +
	"\x06Remove\x12\x18.gnoi.file.RemoveRequest\x1a\x19.gnoi.file.RemoveResponse\"\x00B)\xd2>\x050.1.0Z\x1fgithub.com/openconfig/gnoi/fileb\x06proto3"

var (
	file_github_com_openconfig_gnoi_file_file_proto_rawDescOnce sync.Once
	file_github_com_openconfig_gnoi_file_file_proto_rawDescData []byte
)

func file_github_com_openconfig_gnoi_file_file_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_gnoi_file_file_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_gnoi_file_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnoi_file_file_proto_rawDesc), len(file_github_com_openconfig_gnoi_file_file_proto_rawDesc)))
	})
	return file_github_com_openconfig_gnoi_file_file_proto_rawDescData
}

var file_github_com_openconfig_gnoi_file_file_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_github_com_openconfig_gnoi_file_file_proto_goTypes = []any{
	(*PutRequest)(nil),               // 0: gnoi.file.PutRequest
	(*PutResponse)(nil),              // 1: gnoi.file.PutResponse
	(*GetRequest)(nil),               // 2: gnoi.file.GetRequest
	(*GetResponse)(nil),              // 3: gnoi.file.GetResponse
	(*TransferToRemoteRequest)(nil),  // 4: gnoi.file.TransferToRemoteRequest
	(*TransferToRemoteResponse)(nil), // 5: gnoi.file.TransferToRemoteResponse
	(*StatRequest)(nil),              // 6: gnoi.file.StatRequest
	(*StatResponse)(nil),             // 7: gnoi.file.StatResponse
	(*StatInfo)(nil),                 // 8: gnoi.file.StatInfo
	(*RemoveRequest)(nil),            // 9: gnoi.file.RemoveRequest
	(*RemoveResponse)(nil),           // 10: gnoi.file.RemoveResponse
	(*PutRequest_Details)(nil),       // 11: gnoi.file.PutRequest.Details
	(*types.HashType)(nil),           // 12: gnoi.types.HashType
	(*common.RemoteDownload)(nil),    // 13: gnoi.common.RemoteDownload
}
var file_github_com_openconfig_gnoi_file_file_proto_depIdxs = []int32{
	11, // 0: gnoi.file.PutRequest.open:type_name -> gnoi.file.PutRequest.Details
	12, // 1: gnoi.file.PutRequest.hash:type_name -> gnoi.types.HashType
	12, // 2: gnoi.file.GetResponse.hash:type_name -> gnoi.types.HashType
	13, // 3: gnoi.file.TransferToRemoteRequest.remote_download:type_name -> gnoi.common.RemoteDownload
	12, // 4: gnoi.file.TransferToRemoteResponse.hash:type_name -> gnoi.types.HashType
	8,  // 5: gnoi.file.StatResponse.stats:type_name -> gnoi.file.StatInfo
	2,  // 6: gnoi.file.File.Get:input_type -> gnoi.file.GetRequest
	4,  // 7: gnoi.file.File.TransferToRemote:input_type -> gnoi.file.TransferToRemoteRequest
	0,  // 8: gnoi.file.File.Put:input_type -> gnoi.file.PutRequest
	6,  // 9: gnoi.file.File.Stat:input_type -> gnoi.file.StatRequest
	9,  // 10: gnoi.file.File.Remove:input_type -> gnoi.file.RemoveRequest
	3,  // 11: gnoi.file.File.Get:output_type -> gnoi.file.GetResponse
	5,  // 12: gnoi.file.File.TransferToRemote:output_type -> gnoi.file.TransferToRemoteResponse
	1,  // 13: gnoi.file.File.Put:output_type -> gnoi.file.PutResponse
	7,  // 14: gnoi.file.File.Stat:output_type -> gnoi.file.StatResponse
	10, // 15: gnoi.file.File.Remove:output_type -> gnoi.file.RemoveResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_gnoi_file_file_proto_init() }
func file_github_com_openconfig_gnoi_file_file_proto_init() {
	if File_github_com_openconfig_gnoi_file_file_proto != nil {
		return
	}
	file_github_com_openconfig_gnoi_file_file_proto_msgTypes[0].OneofWrappers = []any{
		(*PutRequest_Open)(nil),
		(*PutRequest_Contents)(nil),
		(*PutRequest_Hash)(nil),
	}
	file_github_com_openconfig_gnoi_file_file_proto_msgTypes[3].OneofWrappers = []any{
		(*GetResponse_Contents)(nil),
		(*GetResponse_Hash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnoi_file_file_proto_rawDesc), len(file_github_com_openconfig_gnoi_file_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_openconfig_gnoi_file_file_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_gnoi_file_file_proto_depIdxs,
		MessageInfos:      file_github_com_openconfig_gnoi_file_file_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_gnoi_file_file_proto = out.File
	file_github_com_openconfig_gnoi_file_file_proto_goTypes = nil
	file_github_com_openconfig_gnoi_file_file_proto_depIdxs = nil
}
